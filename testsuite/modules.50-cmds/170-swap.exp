##############################################################################
#   Modules Revision 3.0
#   Providing a flexible user environment
#
#   File:		modules.50-cmds/%M%
#   Revision:		%I%
#   First Edition:	2001/07/25
#   Last Mod.:		%U%, %G%
#
#   Authors:		R.K. Owen, <rk@owen.sj.ca.us>
#
#   Description:	Testuite testsequence
#   Command:		swap
#   Modulefiles:	loc_dv1/1.0, loc_dv1/2.0, 
#   			loc_dv2/1.0, loc_dv2/2.0, 
#   			loc_dv3/1.0, loc_dv3/2.0, 
#   Sub-Command:
#
#   Comment:	%C{
#			Tests the 'swap' module subcommand for all allowed
#			shell types.
#		}C%
#
##############################################################################

set mod11 "loc_dv1/1.0"
set mod12 "loc_dv1/2.0"
set mod21 "loc_dv2/1.0"
set mod22 "loc_dv2/2.0"
set mod31 "loc_dv3/1.0"
set mod32 "loc_dv3/2.0"

set mod11p "$env(MODULEPATH)/$mod11"
set mod12p "$env(MODULEPATH)/$mod12"
set mod21p "$env(MODULEPATH)/$mod21"
set mod22p "$env(MODULEPATH)/$mod22"
set mod31p "$env(MODULEPATH)/$mod31"
set mod32p "$env(MODULEPATH)/$mod32"

set module "$mod11:$mod21:$mod31"
set modulefile "$mod11p:$mod21p:$mod31p"

#
# set up the environment
#
set env(_LMFILES_) "$modulefile"
set env(LOADEDMODULES) "$module"

#
#  Swap the 1st in list
#  For the different shells ...
#

# different behavior than C-version: on Tcl-version loaded module does
# not get back the position of the module it replaces. the loaded module
# is appended to the end of the module list
set module "$mod21:$mod31:$mod12"
set modulefile "$mod21p:$mod31p:$mod12p"

lappend ans [list setpath LOADEDMODULES $module]
lappend ans [list setpath _LMFILES_ $modulefile]

#
#  The tests
#

test_cmd_re "ALL" "swap $mod11 $mod12" $ans

#
#  Test the one argument form.
#

test_cmd_re "ALL" "swap $mod12" $ans

#
#  Swap the 2nd in list
#  For the different shells ...
#

# different behavior than C-version: same remark than above
set module "$mod11:$mod31:$mod22"
set modulefile "$mod11p:$mod31p:$mod22p"

set ans [list]
lappend ans [list setpath LOADEDMODULES $module]
lappend ans [list setpath _LMFILES_ $modulefile]

#
#  The tests
#

test_cmd_re "ALL" "swap $mod21 $mod22" $ans

#
#  Test the one argument form.
#

test_cmd_re "ALL" "swap $mod22" $ans

#
#  Swap the last in list
#  For the different shells ...
#

set module "$mod11:$mod21:$mod32"
set modulefile "$mod11p:$mod21p:$mod32p"

set ans [list]
lappend ans [list setpath LOADEDMODULES $module]
lappend ans [list setpath _LMFILES_ $modulefile]

#
#  The tests
#

test_cmd_re "ALL" "swap $mod31 $mod32" $ans

#
#  Test the one argument form.
#

test_cmd_re "ALL" "swap $mod32" $ans

#
#  Test with module to unload equal to module to load
#

set ans [list]
lappend ans [list setpath LOADEDMODULES "$mod11:$mod21:$mod31:$mod32"]
lappend ans [list setpath _LMFILES_ "$mod11p:$mod21p:$mod31p:$mod32p"]

# module to unload is not loaded and closest module (mod31) should not be unloaded
test_cmd_re "sh" "swap $mod32 $mod32" $ans


#
#  Cleanup
#

unset env(_LMFILES_)
unset env(LOADEDMODULES)

unset ans

unset modulefile
unset module

unset mod11
unset mod12
unset mod21
unset mod22
unset mod31
unset mod32
unset mod11p
unset mod12p
unset mod21p
unset mod22p
unset mod31p
unset mod32p
