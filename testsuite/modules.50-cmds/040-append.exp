##############################################################################
#   Modules Revision 3.0
#   Providing a flexible user environment
#
#   File:		modules.50-cmds/%M%
#   Revision:		%I%
#   First Edition:	1995/12/06
#   Last Mod.:		%U%, %G%
#
#   Authors:		Jens Hamisch, Jens.Hamisch@Strawberry.COM
#
#   Description:	Testuite testsequence
#   Command:		load
#   Modulefiles:	append/1.0
#   Sub-Command:
#
#   Comment:	%C{
#			Tests the 'append-path' module subcommand for all
#			allowed	shell types.
#		}C%
#
##############################################################################

#
#  Variables. This test forces a module load command. It will result in the
#    environment variables "_LMFILES_", "LOADEDMODULES" and "PATH" to
#    be set up
#

set module "append/2.0"
set modulefile "$modpath/$module"

set old_path $env(PATH)
set ts_path "/this/is/the/modules/testsuite"
set new_path "$old_path:$ts_path"

#
#  For the different shells ...
#

lappend ans [list setpath PATH $new_path]
lappend ans [list setpath LOADEDMODULES $module]
lappend ans [list setpath _LMFILES_ $modulefile]

#
#  The tests
#
test_cmd_re "ALL" "load $module" $ans

#
# Try one empty string
#

set module "append/0.1"
set modulefile "$modpath/$module"

set old_path $env(PATH)
set ts_path ""
set new_path "$old_path:$ts_path"

#
#  For the different shells ...
#

set ans [list]
lappend ans [list setpath PATH $new_path]
lappend ans [list setpath LOADEDMODULES $module]
lappend ans [list setpath _LMFILES_ $modulefile]

#
#  The tests
#
test_cmd_re "ALL" "load $module" $ans

#
# Try the bare colon
#

set module "append/0.2"
set modulefile "$modpath/$module"

# different behavior than C-version: on Tcl-version adding a bare colon
# to a path produces an error since this colon cannot be distinguished
# from the colon used for path separator
set ts_err "$moderr_msgs: add-path cannot handle path equals to separator string\n  In '$modulefile'\n$err_contact"

#
#  The tests
#

testouterr_cmd "ALL" "load $module" "ERR" "$ts_err"

#
# Try bad argument list: missing variable name
#

set module "append/0.3"
set modulefile "$modpath/$module"
set ts_err "$moderr_msgs: add-path should get an environment variable name\n  In '$modulefile'\n$err_contact"
testouterr_cmd "sh" "load $module" "ERR" $ts_err

#
# Try bad argument list: missing variable value
#

set module "append/0.4"
set modulefile "$modpath/$module"
set ts_err "$moderr_msgs: add-path should get a value for environment variable PATH\n  In '$modulefile'\n$err_contact"
testouterr_cmd "sh" "load $module" "ERR" $ts_err

#
# Try bad argument list: empty variable name
#

set module "append/0.5"
set modulefile "$modpath/$module"
set ts_err "$moderr_msgs: add-path should get a valid environment variable name\n  In '$modulefile'\n$err_contact"
testouterr_cmd "sh" "load $module" "ERR" $ts_err

#
# Append multiple paths passed as one string
#

set module "append/2.3"
set modulefile "$modpath/$module"
set old_path "/path/to/dir1"

set env(FOO_modshare) "$old_path:1"
set env(FOO) $old_path

set ans [list]
lappend ans [list set FOO_modshare ":1:/modules/testsuite2.2/2.2:1:$old_path:1:/modules/testsuite2.2:1"]
lappend ans [list set FOO "$old_path:/modules/testsuite2.2:/modules/testsuite2.2/2.2:"]
lappend ans [list setpath LOADEDMODULES $module]
lappend ans [list setpath _LMFILES_ $modulefile]

testouterr_cmd "sh" "load $module" $ans ""

#
# Append multiple paths passed as multiple strings
#

set module "append/2.4"
set modulefile "$modpath/$module"

set ans [list]
lappend ans [list set FOO_modshare ":1:/modules/testsuite2.2/2.2:1:$old_path:1:/modules/testsuite2.2:1"]
lappend ans [list set FOO "$old_path:/modules/testsuite2.2:/modules/testsuite2.2/2.2:"]
lappend ans [list setpath LOADEDMODULES $module]
lappend ans [list setpath _LMFILES_ $modulefile]

testouterr_cmd "sh" "load $module" $ans ""

#
#  Cleanup
#

unset env(FOO_modshare)
unset env(FOO)

unset new_path
unset ts_path
unset old_path
unset ts_err

unset ans

unset modulefile
unset module
