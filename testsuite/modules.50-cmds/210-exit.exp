##############################################################################
#   Modules Revision 3.0
#   Providing a flexible user environment
#
#   File:		modules.50-cmds/%M%
#   Revision:		%I%
#   First Edition:	2006/02/13
#   Last Mod.:		%U%, %G%
#
#   Authors:		R.K. Owen, <rk@owen.sj.ca.us>
#
#   Description:	Testuite testsequence
#   Command:		load
#   Modulefiles:	exit/1.0,
#   			exit/2.0,
#   			exit/3.0, exit/4.0, loc_def/truedef
#   Sub-Command:
#
#   Comment:	%C{
#			Tries the Tcl "exit" to skip loading a module,
#			but not affecting the other loaded modules.
#		}C%
#
##############################################################################

set mod1 "exit/1.0"
set mod2 "exit/2.0"
set mod3 "exit/3.0"
set mod4 "exit/4.0"

set mod1p "$env(MODULEPATH)/$mod1"
set mod2p "$env(MODULEPATH)/$mod2"
set mod3p "$env(MODULEPATH)/$mod3"
set mod4p "$env(MODULEPATH)/$mod4"

set introhelp "Module Specific Help for"
set warnnohelp "$warn_msgs: Unable to find ModulesHelp in"
set introtest "Module Specific Test for"
set warnnotest "$warn_msgs: Unable to find ModulesTest in"
set modpathheader "$modlin $env(MODULEPATH) $modlin"
set modnext "loc_def/truedef"
set modnextp "$env(MODULEPATH)/$modnext"
set modnextwhatis "module named default test"

#
# set up an empty environment
#
set module ""
set modulefile ""
set env(_LMFILES_) "$modulefile"
set env(LOADEDMODULES) "$module"

#
#  load
#  For the different shells ...
#
set module "$mod1"
set modulefile "$mod1p"

lappend ans [list set testsuite1 yes]
lappend ans [list setpath LOADEDMODULES $module]
lappend ans [list setpath _LMFILES_ $modulefile]
lappend ans [list ERR]

#
#  The tests
#

# different behavior than C-version: on Tcl-version exit code of the 'exit'
# command is not thrown as the modulecmd command exit value
test_cmd_re "ALL" "load $mod1 $mod2 $mod3" $ans

test_cmd_re "ALL" "load $mod1 $mod3 $mod2" $ans

# tests that 'exit' does not inhibit next modulefile interpretations on non-load mode
testerr_cmd_re "sh" "display $mod3 $modnext" "$modlin\n$mod3p:\n\nsetenv\t\ttestsuite3\tno\n$modlin\n$modnextp:\n\nmodule-whatis\t$modnextwhatis\n$modlin"
testerr_cmd_re "sh" "whatis $mod3 $modnext" "$modpathheader\n\\s+$modnext: $modnextwhatis"
# exit leads to no rendering of ModulesHelp or ModulesTest procs
testerr_cmd_re "sh" "help $mod3 $modnext" "$modlin\n$introhelp $mod3p:\n\n$modlin\n$introhelp $modnextp:\n\n$warnnohelp $modnextp.\n$modlin"
testerr_cmd_re "sh" "test $mod3 $modnext" "$modlin\n$introtest $mod3p:\n\n$modlin\n$introtest $modnextp:\n\n$warnnotest $modnextp.\n$modlin"

#
#  Same tests with exit called from proc
#

test_cmd_re "ALL" "load $mod1 $mod4 $mod3" $ans

# tests that 'exit' does not inhibit next modulefile interpretations on non-load mode
testerr_cmd_re "sh" "display $mod4 $modnext" "$modlin\n$mod4p:\n\nsetenv\t\ttestsuite4\tno\n$modlin\n$modnextp:\n\nmodule-whatis\t$modnextwhatis\n$modlin"
testerr_cmd_re "sh" "whatis $mod4 $modnext" "$modpathheader\n\\s+$modnext: $modnextwhatis"
# exit leads to no rendering of ModulesHelp or ModulesTest procs
testerr_cmd_re "sh" "help $mod4 $modnext" "$modlin\n$introhelp $mod4p:\n\n$modlin\n$introhelp $modnextp:\n\n$warnnohelp $modnextp.\n$modlin"
testerr_cmd_re "sh" "test $mod4 $modnext" "$modlin\n$introtest $mod4p:\n\n$modlin\n$introtest $modnextp:\n\n$warnnotest $modnextp.\n$modlin"

#
#  Cleanup
#

unset env(_LMFILES_)
unset env(LOADEDMODULES)

unset ans

unset modulefile
unset module

unset mod1
unset mod2
unset mod3
unset mod4
unset mod1p
unset mod2p
unset mod3p
unset mod4p

unset introhelp
unset warnnohelp
unset introtest
unset warnnotest
unset modpathheader
unset modnextwhatis
unset modnext
unset modnextp
