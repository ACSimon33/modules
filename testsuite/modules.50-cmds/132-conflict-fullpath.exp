##############################################################################
#   Modules Revision 3.0
#   Providing a flexible user environment
#
#   File:		modules.50-cmds/%M%
#   Revision:		%I%
#   First Edition:	2017/12/07
#   Last Mod.:		%U%, %G%
#
#   Authors:		Xavier Delaruelle, xavier.delaruelle@cea.fr
#
#   Description:	Testuite testsequence
#   Command:		load
#   Modulefiles:	conflict/module, conflict/fullpath, trace/all_on, setenv/1.0
#   Sub-Command:
#
#   Comment:	%C{
#			Tests the 'conflict' command using full path modulefile
#           or reacting to loaded full path modulefile.
#		}C%
#
##############################################################################

#
#  Variables. This test forces a module load command. It will result in the
#    environment variables "_LMFILES_", "LOADEDMODULES" and "testsuite" to
#    be set up
#

set module1 "conflict/fullpath"
set modulefile1 "$modpath/$module1"
set module2 "conflict/module"
set modulefile2 "$modpath/$module2"
set module3 "conflict/relpath"
set modulefile3 "$modpath/$module3"

set module_tron "trace/all_on"
set modulefile_tron "$modpath/$module_tron"
set module_set1 "setenv/1.0"
set modulefile_set1 "$modpath/$module_set1"

#
#  Error messages
#

set err_conflict1 "$warn_msgs: $module1 cannot be loaded due to a conflict.\n"
append err_conflict1 "HINT: Might try \"module unload $modpath/setenv/1.0\" first."
set err_conflict1re [regsub -all "\(\[.+?\]\)" $err_conflict1 {\\\1}]
set err_conflict2 "$warn_msgs: $module2 cannot be loaded due to a conflict.\n"
append err_conflict2 "HINT: Might try \"module unload trace\" first."
set err_conflict3 "$warn_msgs: $module3 cannot be loaded due to a conflict.\n"
append err_conflict3 "HINT: Might try \"module unload ../setenv/1.0\" first."
set err_conflict3re [regsub -all "\(\[.+?\]\)" $err_conflict3 {\\\1}]
set err_conflictf1 "$warn_msgs: $modulefile1 cannot be loaded due to a conflict.\n"
append err_conflictf1 "HINT: Might try \"module unload $modpath/setenv/1.0\" first."
set err_conflictf1re [regsub -all "\(\[.+?\]\)" $err_conflictf1 {\\\1}]
set err_conflictf2 "$warn_msgs: $modulefile2 cannot be loaded due to a conflict.\n"
append err_conflictf2 "HINT: Might try \"module unload trace\" first."
set err_conflictf2re [regsub -all "\(\[.+?\]\)" $err_conflictf2 {\\\1}]
set err_conflictf3 "$warn_msgs: $modulefile3 cannot be loaded due to a conflict.\n"
append err_conflictf3 "HINT: Might try \"module unload ../setenv/1.0\" first."
set err_conflictf3re [regsub -all "\(\[.+?\]\)" $err_conflictf3 {\\\1}]


#
#  The tests
#

lappend ans [list set testsuite yes]
lappend ans [list setpath LOADEDMODULES "$module1:$module2:$module3"]
lappend ans [list setpath _LMFILES_ "$modulefile1:$modulefile2:$modulefile3"]
testouterr_cmd_re "sh" "load $module1 $module2 $module3" $ans ""

set ans [list]
lappend ans [list set testsuite yes]
lappend ans [list setpath LOADEDMODULES "$modulefile1:$modulefile2:$modulefile3"]
lappend ans [list setpath _LMFILES_ "$modulefile1:$modulefile2:$modulefile3"]
testouterr_cmd_re "sh" "load $modulefile1 $modulefile2 $modulefile3" $ans ""


# test with conflicts loaded as short path
if { $verbose > 0 } {
    send_user "\tSetup LOADEDMODULES = '$module_tron:$module_set1'\n"
    send_user "\tSetup _LMFILES_ = '$modulefile_tron:$modulefile_set1'\n"
}
set env(LOADEDMODULES) "$module_tron:$module_set1"
set env(_LMFILES_) "$modulefile_tron:$modulefile_set1"

testouterr_cmd_re "sh" "load $module1 $module2 $module3" "ERR" "$err_conflict1re\n$err_conflict2\n$err_conflict3"
testouterr_cmd_re "sh" "load $modulefile1 $modulefile2 $modulefile3" "ERR" "$err_conflictf1re\n$err_conflictf2re\n$err_conflictf3re"


# test with conflicts loaded as short path, no more modulepath set
if { $verbose > 0 } {
    send_user "\tUnset MODULEPATH\n"
}
unset env(MODULEPATH)

testouterr_cmd_re "sh" "load $modulefile1 $modulefile2 $modulefile3" "ERR" "$err_conflictf1re\n$err_conflictf2re\n$err_conflictf3re"


# test with conflicts loaded as full path
if { $verbose > 0 } {
    send_user "\tSetup LOADEDMODULES = '$modulefile_tron:$modulefile_set1'\n"
    send_user "\tSetup _LMFILES_ = '$modulefile_tron:$modulefile_set1'\n"
    send_user "\tRestore MODULEPATH = '$modpath'\n"
}
set env(LOADEDMODULES) "$modulefile_tron:$modulefile_set1"
set env(_LMFILES_) "$modulefile_tron:$modulefile_set1"
set env(MODULEPATH) $modpath

testouterr_cmd_re "sh" "load $module1 $module2 $module3" "ERR" "$err_conflict1re\n$err_conflict2\n$err_conflict3"
testouterr_cmd_re "sh" "load $modulefile1 $modulefile2 $modulefile3" "ERR" "$err_conflictf1re\n$err_conflictf2re\n$err_conflictf3re"


# test with conflicts loaded as full path, no more modulepath set
if { $verbose > 0 } {
    send_user "\tUnset MODULEPATH\n"
}
unset env(MODULEPATH)

set ans [list]
lappend ans [list setpath _LMFILES_ "$modulefile_tron:$modulefile_set1:$modulefile2"]
lappend ans [list setpath LOADEDMODULES "$modulefile_tron:$modulefile_set1:$modulefile2"]
lappend ans [list set testsuite yes]
lappend ans [list ERR]
testouterr_cmd_re "sh" "load $modulefile1 $modulefile2 $modulefile3" $ans "$err_conflictf1re\n$err_conflictf3re"


#
#  Cleanup
#

# restore environment
if { $verbose > 0 } {
    send_user "\tUnset _LMFILES_\n"
    send_user "\tUnset LOADEDMODULES\n"
    send_user "\tRestore MODULEPATH = '$modpath'\n"
}
unset env(_LMFILES_)
unset env(LOADEDMODULES)
set env(MODULEPATH) $modpath

unset err_conflict1
unset err_conflict1re
unset err_conflict2
unset err_conflict3
unset err_conflict3re
unset err_conflictf1
unset err_conflictf1re
unset err_conflictf2
unset err_conflictf2re
unset err_conflictf3
unset err_conflictf3re

unset ans

unset modulefile1
unset module1
unset modulefile2
unset module2
unset modulefile3
unset module3
unset modulefile_tron
unset module_tron
unset modulefile_set1
unset module_set1
