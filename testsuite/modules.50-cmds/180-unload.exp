##############################################################################
#   Modules Revision 3.0
#   Providing a flexible user environment
#
#   File:		modules.80-deep/%M%
#   Revision:		%I%
#   First Edition:	2017/08/23
#   Last Mod.:		%U%, %G%
#
#   Authors:		Xavier Delaruelle, xavier.delaruelle@cea.fr
#
#   Description:	Testuite testsequence
#   Command:        unload
#   Modulefiles:	setenv, loc_rc3
#   Sub-Command:
#
#   Comment:	%C{
#           Test unload action
#		}C%
#
##############################################################################

set modulename_1 "setenv"
set module_1 "$modulename_1/0.8"
set modulefile_1 "$modpath/$module_1"
set module_2 "$modulename_1/1.0"
set modulefile_2 "$modpath/$module_2"
set module_3 "$modpath/loc_rc3/1.0"
set modulefile_3 $module_3

lappend ans [list unsetpath testsuite]
lappend ans [list unsetpath LOADEDMODULES]
lappend ans [list unsetpath _LMFILES_]

set module_0 "bad2/body"
set modulefile_0 "$modpath/$module_0"
set mod0_err "$moderr_msgs: invalid command name \"bad-command\"\n  In '$modulefile_0'\n$err_contact"

#
#  The tests
#

# unload unkown module
testouterr_cmd "sh" "unload NonExistant" "ERR" "$err_path'NonExistant'"

# set up the environment
set env(_LMFILES_) "$modulefile_0"
set env(LOADEDMODULES) "$module_0"

# unload broken module, error but no unload
testouterr_cmd "sh" "unload $module_0" "ERR" "$mod0_err"


# set up the environment
set env(_LMFILES_) "$modulefile_1"
set env(LOADEDMODULES) "$module_1"

# unload passing partial name
testouterr_cmd "sh" "unload set" "ERR" "$err_path'set'"

# unload passing fully qualified module name
testouterr_cmd "sh" "unload $module_1" $ans ""


# unload with just module name
testouterr_cmd "sh" "unload $modulename_1" $ans ""


# set up the environment
set env(_LMFILES_) "$modulefile_2:$modulefile_1"
set env(LOADEDMODULES) "$module_2:$module_1"

set ans [list]
lappend ans [list unsetpath testsuite]
lappend ans [list setpath LOADEDMODULES $module_2]
lappend ans [list setpath _LMFILES_ $modulefile_2]

# unload with just module name, last matching loaded will be unloaded
# even if before that the real default is loaded
testouterr_cmd "sh" "unload $modulename_1" $ans ""


# unset MODULEPATH
if { $verbose > 0 } {
    send_user "\tUnset MODULEPATH\n"
}
unset env(MODULEPATH)

set ans [list]
lappend ans [list unsetpath testsuite]
lappend ans [list unsetpath LOADEDMODULES]
lappend ans [list unsetpath _LMFILES_]

# set up the environment
set env(_LMFILES_) "$modulefile_1"
set env(LOADEDMODULES) "$module_1"

# unload passing partial name, modulepath not set anymore
testouterr_cmd "sh" "unload set" "ERR" "$error_msgs: No module path defined"

# unload passing fully qualified module name, modulepath not set anymore
testouterr_cmd "sh" "unload $module_1" $ans ""


# unload with just module name, modulepath not set anymore
testouterr_cmd "sh" "unload $modulename_1" $ans ""


# set up the environment
set env(_LMFILES_) "$modulefile_2:$modulefile_1"
set env(LOADEDMODULES) "$module_2:$module_1"

set ans [list]
lappend ans [list unsetpath testsuite]
lappend ans [list setpath LOADEDMODULES $module_2]
lappend ans [list setpath _LMFILES_ $modulefile_2]

# unload with just module name, modulepath not set anymore, last matching
# loaded will be unloaded even if before that the real default is loaded
testouterr_cmd "sh" "unload $modulename_1" $ans ""


# set up the environment
set env(_LMFILES_) "$modulefile_2:$modulefile_3"
set env(LOADEDMODULES) "$module_2:$module_3"

set ans [list]
lappend ans [list unset testsuite]
lappend ans [list setpath LOADEDMODULES $module_2]
lappend ans [list setpath _LMFILES_ $modulefile_2]

# unload modulefile loaded as full pathname
testouterr_cmd "sh" "unload $module_3" $ans ""


#
#  Cleanup
#

# restore environment
unset env(_LMFILES_)
unset env(LOADEDMODULES)
if { $verbose > 0 } {
    send_user "\tRestore MODULEPATH = '$modpath'\n"
}
set env(MODULEPATH) $modpath

unset ans

unset module_0
unset modulefile_0
unset mod0_err

unset modulename_1
unset module_1
unset modulefile_1
unset module_2
unset modulefile_2
unset module_3
unset modulefile_3
