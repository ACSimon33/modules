##############################################################################
#   Modules Revision 3.0
#   Providing a flexible user environment
#
#   File:		modules.50-cmds/%M%
#   Revision:		%I%
#   First Edition:	2021/06/09
#   Last Mod.:		%U%, %G%
#
#   Authors:		Xavier Delaruelle, xavier.delaruelle@cea.fr
#
#   Description:	Testuite testsequence
#   Command:		load, unload, switch, purge, reload
#   Modulefiles:    variant
#   Sub-Command:
#
#   Comment:	%C{
#           Test boolean variant
#		}C%
#
##############################################################################

set mp $modpath.3
set mpre $modpathre.3
setenv_path_var MODULEPATH $mp


setenv_var MODULES_ADVANCED_VERSION_SPEC 1


#
# test boolean variant definition
#

# test bad definitions
if {[cmpversion $tclsh_version 8.5] > -1} {

setenv_var TESTSUITE_VARIANT bool1
set tserr [msg_load variant/1.0{+foo} [err_invalvarval foo 1 --boolean]]
testouterr_cmd sh {load variant/1.0 +foo} ERR $tserr

setenv_var TESTSUITE_VARIANT bool2
set linenum [expr {[cmpversion $tclsh_version 8.5] > 0 ? 104 : 3}]
set tserr [escre [msg_load variant/1.0{+foo} [msg_moderr [err_boolvarval foo] {variant --boolean foo 0 1<EXM>} $mp/variant/1.0 $linenum]]]
testouterr_cmd_re sh {load variant/1.0 +foo} ERR $tserr

setenv_var TESTSUITE_VARIANT bool3
set linenum [expr {[cmpversion $tclsh_version 8.5] > 0 ? 107 : 3}]
set tserr [escre [msg_load variant/1.0{+foo} [msg_moderr [err_boolvarval foo] {variant --boolean foo val1 val2 val3<EXM>} $mp/variant/1.0 $linenum]]]
testouterr_cmd_re sh {load variant/1.0 +foo} ERR $tserr

setenv_var TESTSUITE_VARIANT bool4
set linenum [expr {[cmpversion $tclsh_version 8.5] > 0 ? 110 : 3}]
set tserr [escre [msg_load variant/1.0{+foo} [msg_moderr [err_boolvarval foo] {variant --boolean --default val1 foo val1 val2 val3<EXM>} $mp/variant/1.0 $linenum]]]
testouterr_cmd_re sh {load variant/1.0 +foo} ERR $tserr

setenv_var TESTSUITE_VARIANT bool5
set linenum [expr {[cmpversion $tclsh_version 8.5] > 0 ? 113 : 3}]
set tserr [escre [msg_load variant/1.0{+foo} [msg_moderr [err_booldflvarval foo] {variant --default val1 --boolean foo<EXM>} $mp/variant/1.0 $linenum]]]
testouterr_cmd_re sh {load variant/1.0 +foo} ERR $tserr

}

# test variant redefinition
setenv_var TESTSUITE_VARIANT bool6
set ans [list]
lappend ans [list set TS0 foo]
lappend ans [list set TS1 foo=1]
lappend ans [list set TS2 true]
lappend ans [list setpath LOADEDMODULES variant/1.0]
lappend ans [list setpath _LMFILES_ $mp/variant/1.0]
lappend ans [list setpath MODULES_LMVARIANT variant/1.0&foo|1|0|0&foo|1|1|0]
testouterr_cmd sh {load variant/1.0 +foo} $ans {}

setenv_var TESTSUITE_VARIANT bool7
set ans [list]
lappend ans [list set TS0 foo]
lappend ans [list set TS1 foo=1]
lappend ans [list set TS2 true]
lappend ans [list setpath LOADEDMODULES variant/1.0]
lappend ans [list setpath _LMFILES_ $mp/variant/1.0]
lappend ans [list setpath MODULES_LMVARIANT variant/1.0&foo|1|1|0&foo|1|0|0]
testouterr_cmd sh {load variant/1.0 +foo} $ans {}


# regular definition
setenv_var TESTSUITE_VARIANT bool8
set ans [list]
lappend ans [list set TS0 foo]
lappend ans [list set TS1 foo=1]
lappend ans [list set TS2 true]
lappend ans [list setpath LOADEDMODULES variant/1.0]
lappend ans [list setpath _LMFILES_ $mp/variant/1.0]
lappend ans [list setpath MODULES_LMVARIANT variant/1.0&foo|1|1|0]
testouterr_cmd sh {load variant/1.0 +foo} $ans {}


#
#  Cleanup
#

reset_test_env
