##############################################################################
#   Modules Revision 3.0
#   Providing a flexible user environment
#
#   File:		modules.50-cmds/%M%
#   Revision:		%I%
#   First Edition:	1995/12/06
#   Last Mod.:		%U%, %G%
#
#   Authors:		Jens Hamisch, Jens.Hamisch@Strawberry.COM
#
#   Description:	Testuite testsequence
#   Command:		load
#   Modulefiles:	conflict/module, trace/all_on, trace/all_off
#   Sub-Command:
#
#   Comment:	%C{
#			Tests the 'conflict' command using a category
#			module name. This tests the reactions of modulecmd
#			if the conflicting module is not load or if
#			some module of the conflicting category is load.
#		}C%
#
##############################################################################

#
#  Variables. This test forces a module load command. It will result in the
#    environment variables "_LMFILES_", "LOADEDMODULES" and "testsuite" to
#    be set up
#

set module "conflict/module"
set modulefile "$env(MODULEPATH)/$module"

set module_tron "trace/all_on"
set modulefile_tron "$env(MODULEPATH)/$module_tron"

set module_troff "trace/all_off"
set modulefile_troff "$env(MODULEPATH)/$module_troff"

#
#  Error messages
#

set err_tron "$warn_msgs: 'module-trace' command not implemented\n"
append err_tron "$warn_msgs: $module cannot be loaded due to a conflict.\n"
append err_tron "HINT: Might try \"module unload trace\" first."
set err_troff "$warn_msgs: $module cannot be loaded due to a conflict.\n"
append err_troff "HINT: Might try \"module unload trace\" first."

#
#  The tests
#

lappend ans [list setpath _LMFILES_ $modulefile_tron]
lappend ans [list setpath LOADEDMODULES $module_tron]
lappend ans [list ERR]
testouterr_cmd "ALL" "load $module_tron $module" $ans "$err_tron"

set ans [list]
lappend ans [list setpath _LMFILES_ $modulefile_troff]
lappend ans [list setpath LOADEDMODULES $module_troff]
lappend ans [list ERR]
testouterr_cmd "ALL" "load $module_troff $module" $ans "$err_troff"

set ans [list]
lappend ans [list set testsuite yes]
lappend ans [list setpath LOADEDMODULES $module]
lappend ans [list setpath _LMFILES_ $modulefile]
test_cmd "ALL" "load $module" $ans

#
#  Cleanup
#

unset err_troff
unset err_tron

unset ans

unset modulefile
unset module
unset modulefile_tron
unset module_tron
unset modulefile_troff
unset module_troff
