##############################################################################
#   Modules Revision 3.0
#   Providing a flexible user environment
#
#   File:		modules.50-cmds/%M%
#   Revision:		%I%
#   First Edition:	1995/12/06
#   Last Mod.:		%U%, %G%
#
#   Authors:		Jens Hamisch, Jens.Hamisch@Strawberry.COM
#
#   Description:	Testuite testsequence
#   Command:		load
#   Modulefiles:	prereq/module, trace/all_on, trace/all_off
#   Sub-Command:
#
#   Comment:	%C{
#			Tests the 'prereq' command using a category
#			module name. This tests the reactions of modulecmd
#			if the prerequired module is not load and if one
#			of the modules of the required category is load.
#		}C%
#
##############################################################################

#
#  Variables. This test forces a module load command. It will result in the
#    environment variables "_LMFILES_", "LOADEDMODULES" and "testsuite" to
#    be set up
#

set module "prereq/module"
set modulefile "$modpath/$module"

set module_tron "trace/all_on"
set modulefile_tron "$modpath/$module_tron"

set module_troff "trace/all_off"
set modulefile_troff "$modpath/$module_troff"

#
#  Error messages
#

set err_prereq "$warn_msgs: $module cannot be loaded due to missing prereq.\n"
append err_prereq "HINT: the following module must be loaded first: trace"
set err_trace "$warn_msgs: 'module-trace' command not implemented"

#
#  The tests
#

# prereq is loaded automatically when autohandling is enabled
if {$install_autohandling eq "y"} {
    set ans [list]
    lappend ans [list setpath LOADEDMODULES "$module_tron:$module"]
    lappend ans [list setpath _LMFILES_ "$modulefile_tron:$modulefile"]
    lappend ans [list setpath MODULES_LMUASKED "$module"]
    lappend ans [list set testsuite yes]
    lappend ans [list setpath MODULES_LMPREREQ "$module&trace"]
    testouterr_cmd_re "ALL" "load $module" $ans $err_trace
} else {
    testouterr_cmd "ALL" "load $module" "ERR" $err_prereq
}

set ans [list]
lappend ans [list setpath LOADEDMODULES "$module_troff:$module"]
lappend ans [list setpath _LMFILES_ "$modulefile_troff:$modulefile"]
lappend ans [list setpath MODULES_LMUASKED "$module_troff:$module"]
lappend ans [list set testsuite yes]
lappend ans [list setpath MODULES_LMPREREQ "$module&trace"]
testouterr_cmd_re "ALL" "load $module_troff $module" $ans ""

set ans [list]
lappend ans [list setpath LOADEDMODULES "$module_tron:$module"]
lappend ans [list setpath _LMFILES_ "$modulefile_tron:$modulefile"]
lappend ans [list setpath MODULES_LMUASKED "$module_tron:$module"]
lappend ans [list set testsuite yes]
lappend ans [list setpath MODULES_LMPREREQ "$module&trace"]
testouterr_cmd_re "ALL" "load $module_tron $module" $ans $err_trace

#
# Tests playing with OR prereq list
#

set module "prereq/orlist"
set modulefile "$modpath/$module"
set err_prereq "$warn_msgs: $module cannot be loaded due to missing prereq.\n"
append err_prereq "HINT: at least one of the following modules must be loaded first: trace setenv loc_dv1"

# prereq is loaded automatically when autohandling is enabled (first in or list)
if {$install_autohandling eq "y"} {
    set ans [list]
    lappend ans [list setpath LOADEDMODULES "$module_tron:$module"]
    lappend ans [list setpath _LMFILES_ "$modulefile_tron:$modulefile"]
    lappend ans [list setpath MODULES_LMUASKED "$module"]
    lappend ans [list set testsuite yes]
    lappend ans [list setpath MODULES_LMPREREQ "$module&trace|setenv|loc_dv1"]
    testouterr_cmd_re "ALL" "load $module" $ans $err_trace
} else {
    testouterr_cmd "ALL" "load $module" "ERR" $err_prereq
}

set ans [list]
lappend ans [list setpath LOADEDMODULES "$module_tron:$module"]
lappend ans [list setpath _LMFILES_ "$modulefile_tron:$modulefile"]
lappend ans [list setpath MODULES_LMUASKED "$module_tron:$module"]
lappend ans [list set testsuite yes]
lappend ans [list setpath MODULES_LMPREREQ "$module&trace|setenv|loc_dv1"]
testouterr_cmd_re "ALL" "load $module_tron $module" $ans $err_trace

#
#  Cleanup
#

unset err_prereq
unset err_trace

unset ans

unset modulefile
unset module
unset modulefile_tron
unset module_tron
unset modulefile_troff
unset module_troff
