##############################################################################
#   Modules Revision 3.0
#   Providing a flexible user environment
#
#   File:		modules.20-locate/%M%
#   Revision:		%I%
#   First Edition:	2017/08/29
#   Last Mod.:		%U%, %G%
#
#   Authors:		Xavier Delaruelle, xavier.delaruelle@cea.fr
#
#   Description:	Testuite testsequence
#   Command:        load, unload, display, help, test, avail, whatis,
#                   path, paths
#   Modulefiles:	.hidden, loc_rc8, loc_rc9
#   Sub-Command:
#
#   Comment:	%C{
#		}C%
#
##############################################################################

set datetime_re "\[0-9\/]{10} \[0-9:]{8}"

set modsym_1 ".hidden"
set module_1 ".hidden/1.0"
set modulefile_1 "$env(MODULEPATH)/$module_1"
set modavail_1 "$module_1\\s+$datetime_re"

set modsym_2 ".hidden/1.0"
set module_2 "$module_1"
set modulefile_2 "$env(MODULEPATH)/$module_2"
set modavail_2 "$modavail_1"

set modsym_3 "loc_rc8/.2.0"
set module_3 "$modsym_3"
set modulefile_3 "$env(MODULEPATH)/$module_3"
set modavail_3 "$module_3\\s+foo\\s+$datetime_re"

set modsym_4 "loc_rc8/foo"
set module_4 "$module_3"
set modulefile_4 "$env(MODULEPATH)/$module_4"
set modavail_4 "$modavail_3"

set modsym_5 "loc_rc8/0.9"
set module_5 "$module_3"
set modulefile_5 "$env(MODULEPATH)/$module_5"
set modavail_5 "$modsym_5 -> loc_rc8/.2.0\\s+"

set modsym_6 "loc_rc8"
set module_6 "loc_rc8/1.0"
set modulefile_6 "$env(MODULEPATH)/$module_6"
set modavail_6 "$modavail_5\n$module_6\\s+$datetime_re"
set modwhatis_6 "\\s+$module_3: $module_3\n\\s+$module_6: $module_6"
set modpaths_6 [list $modulefile_3 $modulefile_6]

set modsym_7 "loc_rc8/.subdir/4.0"
set module_7 "$modsym_7"
set modulefile_7 "$env(MODULEPATH)/$module_7"
set modavail_7 "$module_7\\s+$datetime_re"

set modsym_8 "loc_rc8/.subdir"
set module_8 "$module_7"
set modulefile_8 "$env(MODULEPATH)/$module_8"
set modavail_8 "$modavail_7"

set modsym_9 "loc_rc9"
set module_9 "loc_rc9/.1.0"
set modulefile_9 "$env(MODULEPATH)/$module_9"
set modavail_9 ""
set modwhatis_9 ""
set modpaths_9 [list]
set moderr_9 "$err_path'$modsym_9'"


set help_pre "$modlin\nModule Specific Help for "
set help_post ":\n\n$modlin"
set test_pre "$modlin\nModule Specific Test for "
set test_post ":\n\nTest result: PASS\n$modlin"
set disp_pre "$modlin\n"
set disp_wi "module-whatis\\s+"
set disp_post "\nsetenv\\s+testsuite\\s+yes\n$modlin"
set header_long "- Package/Alias $modlin.- Versions $modlin.- Last mod. $modlin"
set avail_pre "$header_long\n$env(MODULEPATH):"
set whatis_pre "$modlin $env(MODULEPATH) $modlin\n"


#
#  The tests
#

for {set i 1} {$i <= 9} {incr i} {
    set modsym [set "modsym_${i}"]
    set module [set "module_${i}"]
    set modulefile [set "modulefile_${i}"]
    set modavail [set "modavail_${i}"]
    if {[info exists "modwhatis_${i}"]} {
        set modwhatis [set "modwhatis_${i}"]
    } else {
        set modwhatis "\\s+$module: $module"
    }
    set ans_paths [list]
    if {[info exists "modpaths_${i}"]} {
        foreach p [set "modpaths_${i}"] {
            lappend ans_paths [list echo $p]
        }
        if {[llength $ans_paths] == 0} {
            lappend ans_paths [list "OK"]
        }
    } else {
        lappend ans_paths [list echo $modulefile]
    }
    if {[info exists "moderr_${i}"]} {
        set moderr [set "moderr_${i}"]
    } elseif {[info exists moderr]} {
        unset moderr
    }

    # setup clean environment
    set env(LOADEDMODULES) ""
    set env(_LMFILES_) ""

    if {[info exists moderr]} {
        testouterr_cmd "sh" "load $modsym" "ERR" "$moderr"
        testouterr_cmd "sh" "display $modsym" "ERR" "$moderr"
        testouterr_cmd "sh" "help $modsym" "ERR" "$moderr"
        testouterr_cmd "sh" "test $modsym" "ERR" "$moderr"
    } else {
        set ans [list]
        lappend ans [list set testsuite "yes"]
        lappend ans [list setpath LOADEDMODULES $module]
        lappend ans [list setpath _LMFILES_ $modulefile]

        testouterr_cmd "sh" "load $modsym" $ans ""
        testouterr_cmd_re "sh" "display $modsym" "OK" "$disp_pre$modulefile:\n\n$disp_wi$module$disp_post"
        testouterr_cmd_re "sh" "help $modsym" "OK" "$help_pre$modulefile$help_post"
        testouterr_cmd_re "sh" "test $modsym" "OK" "$test_pre$modulefile$test_post"
    }

    if {$modavail eq ""} {
        testouterr_cmd_re "sh" "avail -l $modsym" "" ""
    } else {
        testouterr_cmd_re "sh" "avail -l $modsym" "" "$avail_pre\n$modavail"
    }
    if {$modwhatis eq ""} {
        testouterr_cmd "sh" "whatis $modsym" "ERR" "$moderr"
    } else {
        testouterr_cmd_re "sh" "whatis $modsym" "OK" "$whatis_pre$modwhatis"
    }

    if {[info exists moderr]} {
        testouterr_cmd "sh" "path $modsym" "ERR" "$moderr"
    } else {
        set ans [list]
        lappend ans [list echo $modulefile]
        testouterr_cmd "sh" "path $modsym" $ans ""
    }

    testouterr_cmd "sh" "paths $modsym" $ans_paths ""

    # setup environment for unload action
    set env(_LMFILES_) "$modulefile"
    set env(LOADEDMODULES) "$module"

    set ans [list]
    lappend ans [list unset testsuite]
    lappend ans [list unsetpath LOADEDMODULES]
    lappend ans [list unsetpath _LMFILES_]

    testouterr_cmd "sh" "unload $modsym" $ans ""
}



#
#  Cleanup
#

# Clean up the environment
unset env(LOADEDMODULES)
unset env(_LMFILES_)

unset datetime_re

unset help_pre
unset help_post
unset test_pre
unset test_post
unset disp_pre
unset disp_wi
unset disp_post
unset header_long
unset avail_pre
unset whatis_pre

for {set i 1} {$i <= 9} {incr i} {
    unset "modsym_${i}"
    unset "module_${i}"
    unset "modulefile_${i}"
    unset "modavail_${i}"
    if {[info exists "modwhatis_${i}"]} {
        unset "modwhatis_${i}"
    }
    if {[info exists "modpaths_${i}"]} {
        unset "modpaths_${i}"
    }
    if {[info exists "moderr_${i}"]} {
        unset "moderr_${i}"
    }

}

unset ans
unset ans_paths

unset i
unset modsym
unset module
unset modulefile
unset modavail
unset modwhatis
if {[info exists moderr]} {
    unset moderr
}
