##############################################################################
#   Modules Revision 3.0
#   Providing a flexible user environment
#
#   File:		modules.20-locate/%M%
#   Revision:		%I%
#   First Edition:	2018/01/11
#   Last Mod.:		%U%, %G%
#
#   Authors:		Xavier Delaruelle, xavier.delaruelle@cea.fr
#
#   Description:	Testuite testsequence
#   Command:		load
#   Modulefiles:	loc_virt1
#   Sub-Command:
#
#   Comment:	%C{
#			Check the 'module-virtual' command
#		}C%
#
##############################################################################

set datetime_re "\[0-9\/]{10} \[0-9:]{8}"

set modsym_1 "loc_virt1/1.0"
set module_1 $modsym_1
set modulefile_1 "$modpath/loc_virt1/.common"
set modulefilere_1 "$modpathre/loc_virt1/.common"
set modavail_1 "$module_1\\s+$datetime_re"

set modsym_2 "loc_virt1/2.0"
set module_2 $modsym_2
set modulefile_2 "$modpath/loc_virt1/.common"
set modulefilere_2 "$modpathre/loc_virt1/.common"
set modavail_2 "$module_2\\s+$datetime_re"

set modsym_3 "loc_virt1/3.0"
set module_3 $modsym_3
set modulefile_3 "$env(TESTSUITEDIR)/virttargets/loc_virt"
set modulefilere_3 [regsub -all "\(\[.+?\]\)" $modulefile_3 {\\\1}]
set modavail_3 "$module_3\\s+$datetime_re"

set modsym_4 "loc_virt1/4.0"
set module_4 $modsym_4
set modulefile_4 "$env(TESTSUITEDIR)/virttargets/loc_virt"
set modulefilere_4 [regsub -all "\(\[.+?\]\)" $modulefile_4 {\\\1}]
set modavail_4 "$module_4\\s+$datetime_re"

set modsym_5 "loc_virt1"
set module_5 $module_4
set modulefile_5 $modulefile_4
set modulefilere_5 $modulefilere_4
set modavail_5 "$modavail_1\n$modavail_2\n$modavail_3\n$modavail_4"
set modwhatis_5 "\\s+$module_1: $module_1\n\\s+$module_2: $module_2\n\\s+$module_3: $module_3\n\\s+$module_4: $module_4"
set modpaths_5 [list $modulefile_1 $modulefile_3]

set modsym_6 "loc_virt1/6.0"
set module_6 $modsym_6
set modulefile_6 "$modpath/loc_virt1/notexist"
set modulefilere_6 "$modpathre/loc_virt1/notexist"
set modavail_6 ""
set modwhatis_6 ""
set modpaths_6 [list]
set moderr_6 "$err_file'$modulefile_6'"

set modsym_7 "loc_virt1/7.0"
set module_7 $modsym_7
set modulefile_7 "/path/to/notexist"
set modulefilere_7 $modulefile_7
set modavail_7 ""
set modwhatis_7 ""
set modpaths_7 [list]
set moderr_7 "$err_file'$modulefile_7'"

set modsym_8 "loc_virt1/8.0"
set module_8 $modsym_8
set modulefile_8 "$modpath/loc_virt1"
set modulefilere_8 "$modpathre/loc_virt1"
set modavail_8 ""
set modwhatis_8 ""
set modpaths_8 [list]
set moderr_8 "$err_illdir'$modulefile_8'"

set modsym_9 "loc_virt1/9.0"
set module_9 $modsym_9
set modulefile_9 $env(TESTSUITEDIR)
set modulefilere_9 [regsub -all "\(\[.+?\]\)" $modulefile_9 {\\\1}]
set modavail_9 ""
set modwhatis_9 ""
set modpaths_9 [list]
set moderr_9 "$err_illdir'$modulefile_9'"

set modsym_10 "loc_virt1/.common"
set module_10 $modsym_10
set modulefile_10 "$modpath/$module_10"
set modulefilere_10 "$modpathre/$module_10"
set modavail_10 "$module_10\\s+$datetime_re"


set help_pre "$modlin\nModule Specific Help for "
set help_post ":\n\n$modlin"
set test_pre "$modlin\nModule Specific Test for "
set test_post ":\n\nTest result: PASS\n$modlin"
set disp_pre "$modlin\n"
set disp_wi "module-whatis\\s+"
set disp_set "\nsetenv\\s+testsuite\\s+"
set disp_post "\n$modlin"
set header_long "- Package/Alias $modlin.- Versions $modlin.- Last mod. $modlin"
set avail_pre "$header_long\n$modpathre:"
set whatis_pre "$modlin $modpathre $modlin\n"

#
#  The tests
#

for {set i 1} {$i <= 10} {incr i} {
    set modsym [set "modsym_${i}"]
    set module [set "module_${i}"]
    set modulefile [set "modulefile_${i}"]
    set modulefilere [set "modulefilere_${i}"]
    set modavail [set "modavail_${i}"]
    if {[info exists "modwhatis_${i}"]} {
        set modwhatis [set "modwhatis_${i}"]
    } else {
        set modwhatis "\\s+$module: $module"
    }
    set ans_paths [list]
    if {[info exists "modpaths_${i}"]} {
        lappend ans_paths [list text [set "modpaths_${i}"]]
    } else {
        lappend ans_paths [list text $modulefile]
    }
    if {[info exists "moderr_${i}"]} {
        set moderr [set "moderr_${i}"]
    } elseif {[info exists moderr]} {
        unset moderr
    }

    # setup clean environment
    set env(LOADEDMODULES) ""
    set env(_LMFILES_) ""

    if {[info exists moderr]} {
        testouterr_cmd "sh" "load $modsym" "ERR" "$moderr"
        testouterr_cmd "sh" "display $modsym" "ERR" "$moderr"
        testouterr_cmd "sh" "help $modsym" "ERR" "$moderr"
        testouterr_cmd "sh" "test $modsym" "ERR" "$moderr"
    } else {
        set ans [list]
        lappend ans [list set testsuite $module]
        lappend ans [list setpath LOADEDMODULES $module]
        lappend ans [list setpath _LMFILES_ $modulefile]

        testouterr_cmd "sh" "load $modsym" $ans ""
        testouterr_cmd_re "sh" "display $modsym" "OK" "$disp_pre$modulefilere:\n\n$disp_wi$module$disp_set$module$disp_post"
        testouterr_cmd_re "sh" "help $modsym" "OK" "$help_pre$modulefilere$help_post"
        testouterr_cmd_re "sh" "test $modsym" "OK" "$test_pre$modulefilere$test_post"
    }

    if {$modavail eq ""} {
        testouterr_cmd_re "sh" "avail -l $modsym" "OK" ""
    } else {
        testouterr_cmd_re "sh" "avail -l $modsym" "OK" "$avail_pre\n$modavail"
    }
    if {$modwhatis eq ""} {
        testouterr_cmd "sh" "whatis $modsym" "ERR" "$moderr"
    } else {
        testouterr_cmd_re "sh" "whatis $modsym" "OK" "$whatis_pre$modwhatis"
    }

    set ans [list]
    if {[info exists moderr]} {
        lappend ans [list text ""]
        testouterr_cmd "sh" "path $modsym" $ans "$moderr"
    } else {
        lappend ans [list text $modulefile]
        testouterr_cmd "sh" "path $modsym" $ans ""
    }

    testouterr_cmd "sh" "paths $modsym" $ans_paths ""

    # setup environment for unload action
    set env(_LMFILES_) "$modulefile"
    set env(LOADEDMODULES) "$module"

    set ans [list]
    lappend ans [list unset testsuite]
    lappend ans [list unsetpath LOADEDMODULES]
    lappend ans [list unsetpath _LMFILES_]

    if {[info exists moderr]} {
        testouterr_cmd "sh" "unload $modsym" "ERR" "$moderr"
    } else {
        testouterr_cmd "sh" "unload $modsym" $ans ""
    }
}


# setup environment for more complex load tests
set env(testsuite) $module_1
set env(_LMFILES_) $modulefile_1
set env(_LMFILES__modshare) "$modulefile_1:1"
set env(LOADEDMODULES) $module_1
set env(LOADEDMODULES_modshare) "$module_1:1"

# same target file load twice
set ans [list]
lappend ans [list set _LMFILES__modshare "$modulefile_1:2"]
lappend ans [list set LOADEDMODULES_modshare "$module_1:1:$module_2:1"]
lappend ans [list set _LMFILES_ $modulefile_1]
lappend ans [list set LOADEDMODULES "$module_1:$module_2"]
lappend ans [list set testsuite $module_2]

testouterr_cmd "sh" "load $module_2" $ans ""

# other target from same modname loaded
set ans [list]
lappend ans [list set _LMFILES__modshare "$modulefile_1:1:$modulefile_3:1"]
lappend ans [list set LOADEDMODULES_modshare "$module_1:1:$module_3:1"]
lappend ans [list set _LMFILES_ "$modulefile_1:$modulefile_3"]
lappend ans [list set LOADEDMODULES "$module_1:$module_3"]
lappend ans [list set testsuite $module_3]

testouterr_cmd "sh" "load $module_3" $ans ""

# switch to same target file
set ans [list]
lappend ans [list set _LMFILES__modshare "$modulefile_2:1"]
lappend ans [list set LOADEDMODULES_modshare "$module_2:1"]
lappend ans [list set _LMFILES_ $modulefile_2]
lappend ans [list set LOADEDMODULES "$module_2"]
lappend ans [list set testsuite $module_2]

testouterr_cmd "sh" "switch $module_2" $ans ""

# switch to other target from same modname
set ans [list]
lappend ans [list set _LMFILES__modshare "$modulefile_3:1"]
lappend ans [list set LOADEDMODULES_modshare "$module_3:1"]
lappend ans [list set _LMFILES_ $modulefile_3]
lappend ans [list set LOADEDMODULES "$module_3"]
lappend ans [list set testsuite $module_3]

testouterr_cmd "sh" "switch $module_3" $ans ""


#
#  Cleanup
#

# Clean up the environment
unset env(testsuite)
unset env(LOADEDMODULES)
unset env(LOADEDMODULES_modshare)
unset env(_LMFILES_)
unset env(_LMFILES__modshare)

unset datetime_re

unset help_pre
unset help_post
unset test_pre
unset test_post
unset disp_pre
unset disp_wi
unset disp_set
unset disp_post
unset header_long
unset avail_pre
unset whatis_pre

for {set i 1} {$i <= 10} {incr i} {
    unset "modsym_${i}"
    unset "module_${i}"
    unset "modulefile_${i}"
    unset "modulefilere_${i}"
    unset "modavail_${i}"
    if {[info exists "modwhatis_${i}"]} {
        unset "modwhatis_${i}"
    }
    if {[info exists "modpaths_${i}"]} {
        unset "modpaths_${i}"
    }
    if {[info exists "moderr_${i}"]} {
        unset "moderr_${i}"
    }

}

unset ans
unset ans_paths

unset i
unset modsym
unset module
unset modulefile
unset modulefilere
unset modavail
unset modwhatis
if {[info exists moderr]} {
    unset moderr
}
