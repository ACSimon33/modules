##############################################################################
#   Modules Revision 3.0
#   Providing a flexible user environment
#
#   File:		modules.00-init/%M%
#   Revision:		%I%
#   First Edition:	2018/02/22
#   Last Mod.:		%U%, %G%
#
#   Authors:		Xavier Delaruelle, xavier.delaruelle@cea.fr
#
#   Description:	Testuite testsequence
#   Command:
#   Sub-Command:
#
#   Comment:	%C{
#			Check siteconfig superseding mechanism
#		}C%
#
##############################################################################

# check excepted siteconfig file is installed
if {[siteconfig_isStderrTty]} {

# no procedure superseding test, already handled in 100-pager tests

# test variable superseding
if { $verbose > 0 } {
    send_user "\tSetup TESTSUITE_ENABLE_SITECONFIG_DEBUG = '1'\n"
}
set env(TESTSUITE_ENABLE_SITECONFIG_DEBUG) 1

set ans [list]
lappend ans "DEBUG CALLING $MODULECMD sh -V"
lappend ans "DEBUG Source site configuration \\($siteconfig_filere\\)"
lappend ans "DEBUG initPager: start pager \\(asked_pager=-, cmd='$install_pager', opts='$install_pageropts'\\)"
lappend ans "Modules Release \[0-9a-zA-Z\.\+\\-\]+ \\(\[0-9\-\]{10}\\)"
testouterr_cmd_re "sh" "-V" "" [join $ans "\n"]

# restore environment
if { $verbose > 0 } {
    send_user "\tUnset TESTSUITE_ENABLE_SITECONFIG_DEBUG\n"
}
unset env(TESTSUITE_ENABLE_SITECONFIG_DEBUG)


# test broken siteconfig file
if { $verbose > 0 } {
    send_user "\tSetup TESTSUITE_ENABLE_SITECONFIG_BROKEN = '1'\n"
}
set env(TESTSUITE_ENABLE_SITECONFIG_BROKEN) 1

set ans [list]
lappend ans "$error_msgs: Site configuration source failed"
lappend ans "invalid command name \"unk_foo\""
testouterr_cmd "sh" "-V" "ERR" [join $ans "\n"]

# restore environment
if { $verbose > 0 } {
    send_user "\tUnset TESTSUITE_ENABLE_SITECONFIG_BROKEN\n"
}
unset env(TESTSUITE_ENABLE_SITECONFIG_BROKEN)


# test siteconfig file raising error
# test parseAccessIssue with custom error code by the way
if { $verbose > 0 } {
    send_user "\tSetup TESTSUITE_ENABLE_SITECONFIG_ACCESSERR = '1'\n"
}
set env(TESTSUITE_ENABLE_SITECONFIG_ACCESSERR) 1

set ans [list]
lappend ans "$error_msgs: Site configuration source failed"
lappend ans "Cannot access 'foo'"
testouterr_cmd "sh" "-V" "ERR" [join $ans "\n"]

# restore environment
if { $verbose > 0 } {
    send_user "\tUnset TESTSUITE_ENABLE_SITECONFIG_ACCESSERR\n"
}
unset env(TESTSUITE_ENABLE_SITECONFIG_ACCESSERR)


# test displayElementList procedure in terse+numbered mode
if { $verbose > 0 } {
    send_user "\tSetup TESTSUITE_ENABLE_SITECONFIG_TERSENUM = '1'\n"
}
set env(TESTSUITE_ENABLE_SITECONFIG_TERSENUM) 1

set ans [list]
lappend ans "test:"
lappend ans " 1\\\) elt1 "
lappend ans " 2\\\) elt2 "
lappend ans " 3\\\) elt3 "
lappend ans "Modules Release \[0-9a-zA-Z\.\+\\-\]+ \\(\[0-9\-\]{10}\\)"
testouterr_cmd_re "sh" "-V" "OK" [join $ans "\n"]

# restore environment
if { $verbose > 0 } {
    send_user "\tUnset TESTSUITE_ENABLE_SITECONFIG_TERSENUM\n"
}
unset env(TESTSUITE_ENABLE_SITECONFIG_TERSENUM)


# test readModuleContent procedure in no error message report if issue
# could happen when reading .modulerc/.version file if this kind of file gets
# locked/removed/... between the execution of findModules (that check
# readability) and getModules (that actually read/execute)
if { $verbose > 0 } {
    send_user "\tSetup TESTSUITE_ENABLE_SITECONFIG_READMODNOREPORT = '1'\n"
}
set env(TESTSUITE_ENABLE_SITECONFIG_READMODNOREPORT) 1

set ans [list]
lappend ans "Modules Release \[0-9a-zA-Z\.\+\\-\]+ \\(\[0-9\-\]{10}\\)"
testouterr_cmd_re "sh" "-V" "OK" [join $ans "\n"]

# restore environment
if { $verbose > 0 } {
    send_user "\tUnset TESTSUITE_ENABLE_SITECONFIG_READMODNOREPORT\n"
}
unset env(TESTSUITE_ENABLE_SITECONFIG_READMODNOREPORT)


# test loaded module accessor procedures on non-loaded module
# does not happened currently within modulecmd.tcl as there is always a
# getLoadedModulesList retrieval or a isModuleLoaded call prior use of get
# accessor
if { $verbose > 0 } {
    send_user "\tSetup TESTSUITE_ENABLE_SITECONFIG_LMACCESSOR = '1'\n"
}
set env(TESTSUITE_ENABLE_SITECONFIG_LMACCESSOR) 1

set ans [list]
lappend ans ""
lappend ans ""
lappend ans "Modules Release \[0-9a-zA-Z\.\+\\-\]+ \\(\[0-9\-\]{10}\\)"
testouterr_cmd_re "sh" "-V" "OK" [join $ans "\n"]

# restore environment
if { $verbose > 0 } {
    send_user "\tUnset TESTSUITE_ENABLE_SITECONFIG_LMACCESSOR\n"
}
unset env(TESTSUITE_ENABLE_SITECONFIG_LMACCESSOR)


# test path variable handling on Windows platform (';' separator is used
# instead of ':')
if { $verbose > 0 } {
    send_user "\tSetup TESTSUITE_ENABLE_SITECONFIG_WINDOWS_PLATFORM = '1'\n"
}
set env(TESTSUITE_ENABLE_SITECONFIG_WINDOWS_PLATFORM) 1

set ORIG_PATH $env(PATH)
set env(PATH) "/path/to/dir1"
set env(PATH_modshare) "/path/to/dir1;1"
set module "append/2.0"
set modulefile "$modpath/$module"

set ans [list]
lappend ans [list set _LMFILES__modshare "$modulefile;1"]
lappend ans [list set LOADEDMODULES_modshare "$module;1"]
lappend ans [list setpath PATH "/path/to/dir1;/this/is/the/modules/testsuite"]
lappend ans [list setpath _LMFILES_ $modulefile]
lappend ans [list setpath LOADEDMODULES $module]
lappend ans [list set PATH_modshare "/path/to/dir1;1;/this/is/the/modules/testsuite;1"]
testouterr_cmd "cmd" "load $module" $ans ""

set env(PATH) $ORIG_PATH
unset env(PATH_modshare)

# restore environment
if { $verbose > 0 } {
    send_user "\tUnset TESTSUITE_ENABLE_SITECONFIG_WINDOWS_PLATFORM\n"
}
unset env(TESTSUITE_ENABLE_SITECONFIG_WINDOWS_PLATFORM)


#
#  Clean up variables used in this test case
#

unset ans

unset module
unset modulefile
unset ORIG_PATH

} elseif {$verbose > 0} {
   send_user "\tSkip tests as excepted siteconfig file not installed\n"
}

