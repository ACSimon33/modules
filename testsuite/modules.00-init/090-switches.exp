##############################################################################
#   Modules Revision 3.0
#   Providing a flexible user environment
#
#   File:		modules.00-init/%M%
#   Revision:		%I%
#   First Edition:	95/12/06
#   Last Mod.:		%U%, %G%
#
#   Authors:		Jens Hamisch, Jens.Hamisch@Strawberry.COM
#
#   Description:	Testuite testsequence
#   Command:
#   Sub-Command:
#
#   Comment:	%C{
#			Check all valid command line switches in long
#			and short presentation.
#		}C%
#
##############################################################################

#
# The following answers are to be expected in this testcase ...
#

set modpath $env(MODULEPATH)

set ign_prefix "$warn_msgs: Unsupported option"
set bad_prefix "$error_msgs: Invalid option"
set bad_longarg "$bad_prefix '--foobar'"
set bad_shortarg "$bad_prefix '-z'"
set type_help "Try 'module --help' for more information."
set pos_ans	"Modules Release(.*)Usage: module(.*)Loading \/(.*)Switches:(.*)"
set pos_display_ans "$modlin\n$modpath/loc_fq/1.0:\n\n$modlin"

set err_sh "/bin/false;"
set err_csh "$err_sh"
set err_fish "$err_sh"
set err_tcl "exec /bin/false;"
set err_perl "die \"modulefile.tcl: 1 error(s) detected!\\n\""
set err_python "raise RuntimeError( 'modulefile.tcl: 1 error(s) detected!')"
set err_lisp "(error \"modulefile.tcl: 1 error(s) detected!\")"

#
# The tests
#

if { $verbose > 0 } {
    send_user "\tChecking command line arguments ...\n"
}

# no error when help asked
testouterr_cmd_re "sh" "--help" "^$" "$pos_ans"
testouterr_cmd_re "sh" "-h" "^$" "$pos_ans"
# no command means help
testouterr_cmd_re "sh" "" "^$" "$pos_ans"

# invalid option leads to error code
testouterr_cmd "sh" "--foobar display loc_fq/2.0" "$err_sh" "$bad_longarg\n$type_help"
testouterr_cmd "bash" "--foobar display loc_fq/2.0" "$err_sh" "$bad_longarg\n$type_help"
testouterr_cmd "ksh" "--foobar display loc_fq/2.0" "$err_sh" "$bad_longarg\n$type_help"
testouterr_cmd "zsh" "--foobar display loc_fq/2.0" "$err_sh" "$bad_longarg\n$type_help"
testouterr_cmd "csh" "--foobar display loc_fq/2.0" "$err_csh" "$bad_longarg\n$type_help"
testouterr_cmd "tcsh" "--foobar display loc_fq/2.0" "$err_csh" "$bad_longarg\n$type_help"
testouterr_cmd "fish" "--foobar display loc_fq/2.0" "$err_fish" "$bad_longarg\n$type_help"
testouterr_cmd "tcl" "--foobar display loc_fq/2.0" "$err_tcl" "$bad_longarg\n$type_help"
testouterr_cmd "perl" "--foobar display loc_fq/2.0" "$err_perl" "$bad_longarg\n$type_help"
testouterr_cmd "python" "--foobar display loc_fq/2.0" "$err_python" "$bad_longarg\n$type_help"
testouterr_cmd "lisp" "--foobar display loc_fq/2.0" "$err_lisp" "$bad_longarg\n$type_help"
testouterr_cmd "sh" "-z display loc_fq/2.0" "$err_sh" "$bad_shortarg\n$type_help"
testouterr_cmd "bash" "-z display loc_fq/2.0" "$err_sh" "$bad_shortarg\n$type_help"
testouterr_cmd "ksh" "-z display loc_fq/2.0" "$err_sh" "$bad_shortarg\n$type_help"
testouterr_cmd "zsh" "-z display loc_fq/2.0" "$err_sh" "$bad_shortarg\n$type_help"
testouterr_cmd "csh" "-z display loc_fq/2.0" "$err_csh" "$bad_shortarg\n$type_help"
testouterr_cmd "tcsh" "-z display loc_fq/2.0" "$err_csh" "$bad_shortarg\n$type_help"
testouterr_cmd "fish" "-z display loc_fq/2.0" "$err_fish" "$bad_shortarg\n$type_help"
testouterr_cmd "tcl" "-z display loc_fq/2.0" "$err_tcl" "$bad_shortarg\n$type_help"
testouterr_cmd "perl" "-z display loc_fq/2.0" "$err_perl" "$bad_shortarg\n$type_help"
testouterr_cmd "python" "-z display loc_fq/2.0" "$err_python" "$bad_shortarg\n$type_help"
testouterr_cmd "lisp" "-z display loc_fq/2.0" "$err_lisp" "$bad_shortarg\n$type_help"


# ignore C-version specific command-line switches, no error returned
testerr_cmd_re "sh" "--force display loc_fq/1.0" "^$ign_prefix '--force'\n$pos_display_ans\$"
testerr_cmd_re "sh" "--terse display loc_fq/1.0" "^$pos_display_ans\$"
testerr_cmd_re "sh" "--long display loc_fq/1.0" "^$pos_display_ans\$"
testerr_cmd_re "sh" "--verbose display loc_fq/1.0" "^$ign_prefix '--verbose'\n$pos_display_ans\$"
testerr_cmd_re "sh" "--userlvl=expert display loc_fq/1.0" "^$ign_prefix '--userlvl=expert'\n$pos_display_ans\$"
testerr_cmd_re "sh" "--icase display loc_fq/1.0" "^$ign_prefix '--icase'\n$pos_display_ans\$"

# different behavior than C-version: Tcl-version ignores long and short
# form of C-version specific switches but no other intermediates forms
testerr_cmd "sh" "--for display loc_fq/1.0" "$bad_prefix '--for'\n$type_help"
testerr_cmd "sh" "--ter display loc_fq/1.0" "$bad_prefix '--ter'\n$type_help"
testerr_cmd "sh" "--lon display loc_fq/1.0" "$bad_prefix '--lon'\n$type_help"
testerr_cmd "sh" "--verb display loc_fq/1.0" "$bad_prefix '--verb'\n$type_help"
testerr_cmd "sh" "--use=expert display loc_fq/1.0" "$bad_prefix '--use=expert'\n$type_help"
testerr_cmd "sh" "--ica display loc_fq/1.0" "$bad_prefix '--ica'\n$type_help"

testerr_cmd_re "sh" "-f display loc_fq/1.0" "^$ign_prefix '-f'\n$pos_display_ans\$"
testerr_cmd_re "sh" "-t display loc_fq/1.0" "^$pos_display_ans\$"
testerr_cmd_re "sh" "-l display loc_fq/1.0" "^$pos_display_ans\$"
testerr_cmd_re "sh" "-v display loc_fq/1.0" "^$ign_prefix '-v'\n$pos_display_ans\$"
testerr_cmd_re "sh" "-u expert display loc_fq/1.0" "^$ign_prefix '-u'\n$pos_display_ans\$"
testerr_cmd_re "sh" "-i display loc_fq/1.0" "^$ign_prefix '-i'\n$pos_display_ans\$"

testerr_cmd "sh" "--use=exp display loc_fq/1.0" "$bad_prefix '--use=exp'\n$type_help"
testerr_cmd "sh" "--use=novice display loc_fq/1.0" "$bad_prefix '--use=novice'\n$type_help"
testerr_cmd "sh" "--use=nov display loc_fq/1.0" "$bad_prefix '--use=nov'\n$type_help"
testerr_cmd "sh" "--use=advanced display loc_fq/1.0" "$bad_prefix '--use=advanced'\n$type_help"
testerr_cmd "sh" "--use=adv display loc_fq/1.0" "$bad_prefix '--use=adv'\n$type_help"
testerr_cmd "sh" "--u novice display loc_fq/1.0" "$bad_prefix '--u'\n$type_help"
testerr_cmd "sh" "--u advanced display loc_fq/1.0" "$bad_prefix '--u'\n$type_help"

# different behavior than C-version: Tcl-version ignores C-version specific
# switches so no error is raised when a bad value is passed to these switches
testerr_cmd_re "sh" "--userlvl=foobar display loc_fq/1.0" "$pos_display_ans"


#
#  Clean up variables used in this test case
#

unset ign_prefix
unset bad_prefix
unset bad_longarg
unset bad_shortarg
unset pos_ans
unset pos_display_ans
unset type_help

unset err_sh
unset err_csh
unset err_fish
unset err_tcl
unset err_perl
unset err_python
unset err_lisp
