##############################################################################
#   Modules Revision 3.0
#   Providing a flexible user environment
#
#   File:		modules.70-maint/%M%
#   Revision:		%I%
#   First Edition:	95/12/06
#   Last Mod.:		%U%, %G%
#
#   Authors:		Jens Hamisch, Jens.Hamisch@Strawberry.COM
#
#   Description:	Testuite testsequence
#   Command:		help
#   Modulefiles:	help/2.0, bad
#   Sub-Command:
#
#   Comment:	%C{
#			Tests the module command 'help'
#			Help w/o arguments is checked during the testsuites
#			initialization phase, when probing the release of
#			modulecmd.
#			add test regarding the redirection of stdout 
#			help/2.0 => puts stdout
#			help/3.0 => puts stderr
#			both should provide the same stderr outpout
#		}C%
#
##############################################################################

#
#  The affected module file
#

set module "help/2.0"
# different behavior than C-version: on Tcl-version 'module-log', 'module-verbosity'
# and 'module-user' commandq are not handled and will always return a warning message
# to inform the user.
set err_help "-------------------------------------------------------------------
Module Specific Help for $env(TESTSUITEDIR)/modulefiles/$module:

WARNING: 'module-user' command not implemented
WARNING: 'module-verbosity' command not implemented
WARNING: 'module-log' command not implemented
Help_out
Help_err
-------------------------------------------------------------------"
set out_help "/bin/true;"

set module_2 "bad"
set out_interr "Module ERROR: Occurred in file $env(TESTSUITEDIR)/modulefiles/$module_2/.modulerc:invalid command name \"bad-command\""
set err_sh "/bin/false;"

#
#  The tests
#

# different behavior than C-version: on Tcl-version 'stdout' output made in a
# ModulesHelp procedure is not redirected to stderr and will produce an error
# as output will be parsed by the underlying shell. So for this test $module
# has been adapted to output everything to stderr

# test stderr output
testerr_cmd "sh" "help $module" "$err_help"

# test stdout output: MUST be empty
test_cmd "sh" "help $module" "$out_help"

# test with erroneous modulefile
testouterr_cmd_re "sh" "help $module_2" "$err_sh" "$out_interr.*"

#
#  Cleanup
#

unset module 
unset err_help
unset out_help

unset module_2
unset out_interr
unset err_sh
