##############################################################################
#   Modules Revision 3.0
#   Providing a flexible user environment
#
#   File:		modules.70-maint/%M%
#   Revision:		%I%
#   First Edition:	2017/11/26
#   Last Mod.:		%U%, %G%
#
#   Authors:		Xavier Delaruelle, xavier.delaruelle@cea.fr
#
#   Description:	Testuite testsequence
#   Command:        remove-path
#   Modulefiles:
#   Sub-Command:
#
#   Comment:	%C{
#           Test 'remove-path' module command
#		}C%
#
##############################################################################

if {[info exists env(FOO)]} {
    if { $verbose > 0 } {
        send_user "\tUnset FOO\n"
    }
    set ORIG_FOO $env(FOO)
    unset env(FOO)
}

set path1 "/path/to/dir1"
set path2 "/path/other/dir2"
set path3 "/path/other/dir3"

lappend ans [list unset FOO_modshare]

testouterr_cmd_re "sh" "remove-path FOO $path1" $ans ""


if { $verbose > 0 } {
    send_user "\tSetup FOO = '$path1'\n"
}
set env(FOO) $path1

set ans [list]
lappend ans [list unsetpath FOO]
testouterr_cmd_re "sh" "remove-path FOO $path1" $ans ""


if { $verbose > 0 } {
    send_user "\tSetup FOO = '$path1:$path2'\n"
}
set env(FOO) "$path1:$path2"

set ans [list]
lappend ans [list setpath FOO "$path1"]
testouterr_cmd_re "ALL" "remove-path FOO $path2" $ans ""
testouterr_cmd_re "sh" "remove-path -d : FOO $path2" $ans ""
testouterr_cmd_re "sh" "remove-path --delim : FOO $path2" $ans ""

set ans [list]
lappend ans [list setpath FOO "$path1:$path2"]
testouterr_cmd_re "sh" "remove-path FOO $path3" $ans ""


if { $verbose > 0 } {
    send_user "\tSetup FOO = '$path1,$path2'\n"
}
set env(FOO) "$path1,$path2"

set ans [list]
lappend ans [list setpath FOO "$path1"]
testouterr_cmd_re "sh" "remove-path -d , FOO $path2" $ans ""
testouterr_cmd_re "sh" "remove-path --delim , FOO $path2" $ans ""


if { $verbose > 0 } {
    send_user "\tSetup FOO = ':$path1:$path2'\n"
}
set env(FOO) ":$path1:$path2"

set ans [list]
lappend ans [list setpath FOO "$path1:$path2"]
testouterr_cmd_re "sh" "remove-path FOO " $ans ""


# test bad argument list
testouterr_cmd_re "sh" "remove-path FOO" "ERR" "$error_msgs: Unexpected number of args for 'remove-path' command\n$err_typehelp"
testouterr_cmd_re "sh" "remove-path -d : FOO" "ERR" "$error_msgs: remove-path should get a value for environment variable FOO"
testouterr_cmd_re "sh" "remove-path -d :" "ERR" "$error_msgs: remove-path should get an environment variable name"
testouterr_cmd_re "sh" "remove-path -d : " "ERR" "$error_msgs: remove-path should get a valid environment variable name"


#
#  Cleanup
#

# Clean up the environment
if {[info exists ORIG_FOO]} {
    if { $verbose > 0 } {
        send_user "\tRestore FOO = '$ORIG_FOO'\n"
    }
    set env(FOO) $ORIG_FOO
    unset ORIG_FOO
} else {
    unset env(FOO)
}

unset ans

unset path1
unset path2
unset path3
