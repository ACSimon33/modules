##############################################################################
#   Modules Revision 3.0
#   Providing a flexible user environment
#
#   File:       modules.00-init/%M%
#   Revision:       %I%
#   First Edition:  2020/04/25
#   Last Mod.:      %U%, %G%
#
#   Authors:        Xavier Delaruelle, xavier.delaruelle@cea.fr
#
#   Description:    Testuite testsequence
#   Command:
#   Sub-Command:
#
#   Comment:    %C{
#           Check modulefiles generated by 'sh-to-mod' sub-command
#       }C%
#
##############################################################################

set shtomod_supported_shells [list sh bash ksh zsh dash ksh93]
set shtomod_supported_fshells [list sh bash ksh zsh]
set testscriptsh testsuite/example/sh-to-mod.sh
set testscriptshargs "v\\\'l val\\\"e val\\\\\\\"e \"\""

# what are the installed shells
set shtomod_avail_shells [list]
foreach sh $shtomod_supported_shells {
     set shbin [lindex [auto_execok $sh] 0]
    if {$shbin ne {}} {
        lappend shtomod_avail_shells $sh
        if {[lsearch -exact $shtomod_supported_fshells $sh] != -1} {
           lappend shtomod_avail_fshells $sh
        }
    }
}

set testshenvcmds "echo \"\$FOOCB:\$FOOEM:\$FOOSP:\$FOOARG1:\$FOOARG2:\$FOOARG3:\$FOOARG4\"\;"
append testshenvcmds "alfoo\; alcb\; alsp\;"
append testshenvcmds "funcnl\; funccb\; funcsp\;"

set testshenvcmds_dash "echo \"\$FOOCB:\$FOOEM:\$FOOSP:\$FOOARG1:\$FOOARG2:\$FOOARG3:\$FOOARG4\"\;"
append testshenvcmds_dash "alfoo\; alcb\; alsp\;"

if {$verbose > 0} {
   send_user "\tChecking modulefiles generated by 'sh-to-mod' sub-command\n"
}

set tsout "va{ue::value :v'l:val\"e:val\\\"e:\n"
append tsout "Release\nf{o\nf\"o\nb\\\"r\nf'o\n"
append tsout "foo\nbar\nf{o\nf\"o\nb\\\"r\nf'o"

# no argument passed to script nor function defined with dash
set tsout_dash "va{ue::value ::::\n"
append tsout_dash "Release\nf{o\nf\"o\nb\\\"r\nf'o"

foreach sh $shtomod_avail_shells {
    # test modulefile definition also cope with other shells
    foreach fsh $shtomod_avail_fshells {
        if {$sh eq {dash} || ($sh eq {sh} && $sh_kind eq {dash})} {
           testall_cmd $fsh "module sh-to-mod $sh $testscriptsh $testscriptshargs 2>shtomod\; module load ./shtomod\; $testshenvcmds_dash" $tsout_dash {} 0
        } else {
           testall_cmd $fsh "module sh-to-mod $sh $testscriptsh $testscriptshargs 2>shtomod\; module load ./shtomod\; $testshenvcmds" $tsout {} 0
        }
        file delete shtomod
    }
}


#
#  Clean up variables used in this test case
#

unset sh
unset shbin
unset fsh

unset shtomod_supported_shells
unset shtomod_supported_fshells
unset shtomod_avail_shells
unset shtomod_avail_fshells
unset testscriptsh
unset testscriptshargs
unset testshenvcmds
unset tsout
unset tsout_dash

# vim:set tabstop=3 shiftwidth=3 expandtab autoindent:
