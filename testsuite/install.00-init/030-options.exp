##############################################################################
#   Modules Revision 3.0
#   Providing a flexible user environment
#
#   File:       modules.00-init/%M%
#   Revision:       %I%
#   First Edition:  2017/05/07
#   Last Mod.:      %U%, %G%
#
#   Authors:        Xavier Delaruelle, xavier.delaruelle@cea.fr
#
#   Description:    Testuite testsequence
#   Command:
#   Sub-Command:
#
#   Comment:    %C{
#           Check selected installation options have been honored
#       }C%
#
##############################################################################


set bad_cmd "$error_msgs: Invalid command 'foo'"
set use_desc "Search path for module files \\(in search order\\):"
set moddir_header "$install_modulefilesdir:"
set mod_examples "dot\nmodule-git\nmodule-info\nnull\nuse.own"
set modpath_list [split $install_modulepath ":"]
set lm_list [split $install_loadedmodules ":"]

#
# The tests
#

if {$install_setmanpath eq "y"} {
   if {$verbose > 0} {
      send_user "\tChecking man pages availability\n"
   }
   foreach shell $shell_list {
      testall_cmd_re "$shell" "man -w modulefile" "^$install_mandir/man4/modulefile.*\$" "^\$" 0
      testall_cmd_re "$shell" "man -w module" "^$install_mandir/man1/module.*\$" "^\$" 0
   }
} elseif {$verbose > 0} {
   send_user "\tSkipping man pages availability checks\n"
}

if {$install_setbinpath eq "y"} {
   if {$verbose > 0} {
      send_user "\tChecking envml availability\n"
   }
   foreach shell $shell_list {
      testall_cmd_re "$shell" "envml -h" "^Usage:.*/envml .*\$" "^\$" 0
   }
   if {$install_examplemodulefiles eq "y" && $install_loadedmodules eq "" \
      && [lsearch -exact $modpath_list $install_modulefilesdir] > -1} {
      foreach shell $shell_list {
         testall_cmd "$shell" "envml null printenv LOADEDMODULES" "null" "" 0
      }
   }
} elseif {$verbose > 0} {
   send_user "\tSkipping envml availability checks\n"
}

if {$install_setswitchml eq "y"} {
   if {$verbose > 0} {
      send_user "\tChecking switchml availability\n"
   }
   foreach shell $shell_list {
      switch -- $shell {
         sh - bash - ksh - zsh {
            testall_cmd_re "$shell" "type switchml" "^switchml is a.*\$" "^\$" 0
         }
         csh - tcsh {
            testall_cmd_re "$shell" "alias switchml" "^.+\$" "^\$" 0
         }
      }
   }
} elseif {$verbose > 0} {
   send_user "\tSkipping switchml availability checks\n"
}

if {$install_modulepath ne ""} {
   if {$verbose > 0} {
      send_user "\tChecking default modulepath setup\n"
   }
   foreach shell $shell_list {
      testall_cmd_re "$shell" "module use" "^\$" "^$use_desc\n\\s+[join $modpath_list {\n\\s+}]\$" 0
   }
} elseif {$verbose > 0} {
   send_user "\tSkipping default modulepath checks\n"
}

if {$install_examplemodulefiles eq "y" \
   && [lsearch -exact $modpath_list $install_modulefilesdir] > -1} {
   if {$verbose > 0} {
      send_user "\tChecking example modulefiles installation\n"
   }
   foreach shell $shell_list {
      testall_cmd_re "$shell" "module avail -t" "^\$" "$moddir_header\n$mod_examples" 0
   }
} elseif {$verbose > 0} {
   send_user "\tSkipping example modulefiles installation checks\n"
}

if {$install_loadedmodules ne ""} {
   if {$verbose > 0} {
      send_user "\tChecking default loaded modules setup\n"
   }
   foreach shell $shell_list {
      testall_cmd_re "$shell" "module list -t" "^\$" "^$cur_loaded\n[join $lm_list {.*\n}]\$" 0
   }
} elseif {$verbose > 0} {
   send_user "\tSkipping default loaded modules checks\n"
}

#
#  Clean up variables used in this test case
#

unset bad_cmd
unset use_desc
unset mod_examples
unset moddir_header
unset modpath_list
unset lm_list

# vim:set tabstop=3 shiftwidth=3 expandtab autoindent:
