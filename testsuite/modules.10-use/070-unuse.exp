##############################################################################
#   Modules Revision 3.0
#   Providing a flexible user environment
#
#   File:		modules.10-use/%M%
#   Revision:		%I%
#   First Edition:	95/12/06
#   Last Mod.:		%U%, %G%
#
#   Authors:		Jens Hamisch, Jens.Hamisch@Strawberry.COM
#
#   Description:	Testuite testsequence
#   Command:		unuse
#   Sub-Command:
#
#   Comment:	%C{
#			Check removing a path for the list of modulefile
#			paths in $MODULEPATH
#			Also it's not an error to unload a bad dir.
#		}C%
#
##############################################################################

#
# Variables for this test
#

set path "$env(TESTSUITEDIR)/modulefiles.other"
set tsdirname [file tail $env(TESTSUITEDIR)]
regsub "^.*/$tsdirname" $path "$tsdirname" relpath
regsub "$tsdirname" $relpath "$tsdirname/../$tsdirname/./" relpath_wdot
set badpath "$env(TESTSUITEDIR)/modulefiles.bad"
set mod_path "$env(MODULEPATH)"
set bad_use ""
set path_list_header "Search path for module files (in search order):"
set no_path_list "$warn_msgs: No directories on module search path"

set use	"unuse"

#
# Put a new entry to unuse to the MODULEPATH
#

if { $verbose > 0 } {
    send_user "Setup MODULEPATH = $path:$mod_path\n"
}
set env(MODULEPATH) "$path:$mod_path"


#
# test the bad first
#

testerr_cmd_re "ALL" "$use $badpath" "$bad_use"

#
# The tests ...
#   do these last so the .modulesbeginenv is left in a good state for 070-Maint
#

lappend ans [list setpath MODULEPATH $mod_path]
test_cmd_re "ALL" "$use $path" $ans

#
# test with relative-path directory
# should end with same result as above
#

test_cmd_re "ALL" "$use $relpath" $ans

#
# test with relative-path containing useless "." and ".." components
# should end with same result as above
#

test_cmd_re "ALL" "$use $relpath_wdot" $ans

#
# List enabled paths with 2 paths set
#

testouterr_cmd "ALL" "$use" "OK" "$path_list_header\n  $path\n  $mod_path"

# list paths with no paths set
if { $verbose > 0 } {
    send_user "\tSetup MODULEPATH = ''\n"
}
set ORIG $::env(MODULEPATH)
set ::env(MODULEPATH) ""

testouterr_cmd "ALL" "$use" "OK" "$no_path_list"

#
# Test to remove an empty path
#

testouterr_cmd "ALL" "$use " "OK" ""


#
# Cleanup
#

if { $verbose > 0 } {
    send_user "Resetting MODULEPATH\n"
}
set env(MODULEPATH) "$mod_path"

unset path
unset tsdirname
unset relpath
unset relpath_wdot
unset mod_path
unset use
unset badpath
unset bad_use
unset ans
unset path_list_header
unset no_path_list
