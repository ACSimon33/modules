##############################################################################
#   Modules Revision 3.0
#   Providing a flexible user environment
#
#   File:		modules.20-locate/%M%
#   Revision:		%I%
#   First Edition:	2017/05/27
#   Last Mod.:		%U%, %G%
#
#   Authors:		Xavier Delaruelle, xavier.delaruelle@cea.fr
#
#   Description:	Testuite testsequence
#   Command:		use, unuse, load, display, whatis, avail, aliases
#   Modulefiles:	
#   Sub-Command:
#
#   Comment:	%C{
#			Modulepath handling when access rights to get to it does not
#           allow it
#		}C%
#
##############################################################################

# cannot test access if superuser privileges are in use
if {$tcl_platform(user) eq "root"} {
    send_user "\tskipping access tests as tests are run by superuser\n"
} else {

#
# Variables for this test
#

set module "loc_rc6"

set orig_modpath $::env(MODULEPATH)

set hide_perms "ugo-rx"

#
# Test enabling modulepath when access not granted to it
#

if { $verbose > 0 } {
    send_user "\tSetup MODULEPATH = ''\n"
}
set ::env(MODULEPATH) ""

change_file_perms $orig_modpath $hide_perms

# normal enabling, as no directory access
lappend ans [list set MODULEPATH_modshare "$orig_modpath:1"]
lappend ans [list set MODULEPATH $orig_modpath]
testouterr_cmd "sh" "use $orig_modpath" $ans ""


if { $verbose > 0 } {
    send_user "\tRestore MODULEPATH = $orig_modpath\n"
}
set ::env(MODULEPATH) $orig_modpath


#
# Test global access to the modulefiles of a modulepath when access not
# granted on this modulepath
#

# nothing found
testouterr_cmd "sh" "whatis" "OK" ""
testouterr_cmd "sh" "avail" "OK" ""
testouterr_cmd "sh" "aliases" "OK" ""


#
# Test access to modulefile when access not granted on modulepath
#

# nothing found
testouterr_cmd "sh" "load $module" "ERR" "$err_path'$module'"
testouterr_cmd "sh" "display $module" "ERR" "$err_path'$module'"
testouterr_cmd "sh" "whatis $module" "ERR" "$err_path'$module'"
testouterr_cmd "sh" "avail -t $module" "OK" ""


#
# Test disabling modulepath when access not granted to it
#

# normal disabling, as no directory access
set ans [list]
lappend ans [list unsetpath MODULEPATH]
testouterr_cmd "sh" "unuse $orig_modpath" $ans ""

restore_file_perms $orig_modpath


#
# Cleanup
#

unset hide_perms

unset orig_modpath
unset ans

unset module

}
