##############################################################################
#   Modules Revision 3.0
#   Providing a flexible user environment
#
#   File:		modules.51-scan/%M%
#   Revision:		%I%
#   First Edition:	2023/02/21
#   Last Mod.:		%U%, %G%
#
#   Authors:		Xavier Delaruelle, xavier.delaruelle@cea.fr
#
#   Description:	Testuite testsequence
#   Command:		paths
#   Modulefiles:    scan
#   Sub-Command:
#
#   Comment:	%C{
#           Tests scan evaluation on paths sub-command
#		}C%
#
##############################################################################

skip_if_quick_mode

set mp $modpath.4
set mpre $modpathre.4
setenv_path_var MODULEPATH $mp

# ensure advanced version specifiers are enabled
setenv_var MODULES_ADVANCED_VERSION_SPEC 1

# ensure paths tests have implicit default enabled
setenv_var MODULES_IMPLICIT_DEFAULT 1


#
# symbolic version elements during scan
#

setenv_var TESTSUITE_SCAN sym1

set ans [list]
lappend ans [list text $mp/scan/1.0]
lappend ans [list text $mp/scan/2.0]
testouterr_cmd sh {paths foo=val3} $ans {}

set tserr ".*
Get modules: {foo/unk scan scan/foo scan/unk scan/1.0 scan/2.0 scan/1.1 scan/2.1 scan/sym} matching 'foo=val3' in '$mpre'
.*"
testouterr_cmd_re sh {paths -T foo=val3} $ans $tserr

set ans [list]
lappend ans [list text $mp/scan/1.0]
testouterr_cmd sh {paths foo=val4} $ans {}

set ans [list]
lappend ans [list text $mp/scan/1.0]
testouterr_cmd sh {paths scan/sym foo=val4} $ans {}

set ans [list]
lappend ans [list text $mp/scan/1.0]
set tserr ".*
Get modules: {scan/1.1 scan/sym scan foo/unk scan/unk scan/1.0} matching 'foo=val4' in '$mpre'
.*"
testouterr_cmd_re sh {paths -T foo=val4} $ans $tserr

set tserr ".*
Get modules: {scan scan/1.0} matching 'scan@:1.0 foo=val4' in '$mpre'"
testouterr_cmd_re sh {paths -T scan@:1.0 foo=val4} $ans $tserr

# with global symbol
setenv_var MODULERCFILE $env(TESTSUITEDIR)/etc/modulerc.scan
set ans [list]
lappend ans [list text $mp/scan/1.0]
testouterr_cmd sh {paths foo=val4} $ans {}

testouterr_cmd sh {paths scan/globalsym foo=val4} $ans {}

testouterr_cmd sh {paths scan/globalsym foo=val5} OK {}

# no extra match filter
set ans [list]
lappend ans [list text $mp/scan/1.0]
lappend ans [list text $mp/scan/2.0]
testouterr_cmd sh {paths scan} $ans {}

set tserr ".*
Get modules: {foo/unk foo/globalunk scan scan/unk scan/globalunk scan/1.0 scan/1.1 scan/sym scan/globalsym} matching 'foo=val4' in '$mpre'
.*"
set ans [list]
lappend ans [list text $mp/scan/1.0]
testouterr_cmd_re sh {paths -T foo=val4} $ans $tserr

set tserr ".*
Get modules: {scan scan/1.0} matching 'scan@:1.0 foo=val4' in '$mpre'"
testouterr_cmd_re sh {paths -T scan@:1.0 foo=val4} $ans $tserr
setenv_var MODULERCFILE $ORIG_MODULERCFILE


#
# default symbolic version during scan
#

setenv_var TESTSUITE_SCAN sym2

set tserr ".*
Get modules: {scan/1.1 scan/default scan scan/1.0} matching 'scan foo=val1' in '$mpre'
Get modules: {scan scan/1.0} matching 'scan/1.0' in '$mpre'
.*"
set ans [list]
lappend ans [list text $mp/scan/1.0]
testouterr_cmd_re sh {paths -T scan foo=val1} $ans $tserr

set tserr ".*
Get modules: {scan/2.0 scan scan/2.1 scan/latest} matching 'scan foo=val4' in '$mpre'
Get modules: {scan/2.1 scan} matching 'scan/2.1' in '$mpre'
.*"
set ans [list]
lappend ans [list text $mp/scan/2.0]
testouterr_cmd_re sh {paths -T scan foo=val4} $ans $tserr

set tserr ".*
Get modules: {} matching 'scan@default foo=val4' in '$mpre'"
testouterr_cmd_re sh {paths -T scan@default foo=val4} OK $tserr

set tserr ".*
Get modules: {scan/default scan scan/1.0} matching 'scan@default foo=val2' in '$mpre'
Get modules: {scan scan/1.0} matching 'scan/1.0' in '$mpre'
.*"
set ans [list]
lappend ans [list text $mp/scan/1.0]
testouterr_cmd_re sh {paths -T scan@default foo=val2} $ans $tserr

set tserr ".*
Get modules: {scan/2.0 scan/2.1 scan} matching 'scan@1.1:2.1 foo=val4' in '$mpre'"
set ans [list]
lappend ans [list text $mp/scan/2.0]
testouterr_cmd_re sh {paths -T scan@1.1:2.1 foo=val4} $ans $tserr

set tserr ".*
Get modules: {scan/2.0 scan/1.1 scan} matching 'scan@1.1:2.0 foo=val2' in '$mpre'"
set ans [list]
lappend ans [list text $mp/scan/1.0]
lappend ans [list text $mp/scan/2.0]
testouterr_cmd_re sh {paths -T scan@1.1:2.0 foo=val2} $ans $tserr


#
# auto symbolic version during scan
#

setenv_var TESTSUITE_SCAN sym3

set tserr ".*
Get modules: {scan/1.1 scan scan/1.0} matching 'scan foo=val1' in '$mpre'"
set ans [list]
lappend ans [list text $mp/scan/1.0]
testouterr_cmd_re sh {paths -T scan foo=val1} $ans $tserr

set tserr ".*
Get modules: {scan/2.0 scan scan/default scan/2.1 scan/latest} matching 'scan foo=val4' in '$mpre'
Get modules: {scan/2.1 scan} matching 'scan/2.1' in '$mpre'
.*"
set ans [list]
lappend ans [list text $mp/scan/2.0]
testouterr_cmd_re sh {paths -T scan foo=val4} $ans $tserr

set tserr ".*
Get modules: {scan scan/2.1 scan/default} matching 'scan@default foo=val4' in '$mpre'
Get modules: {scan/2.1 scan} matching 'scan/2.1' in '$mpre'
.*"
set ans [list]
lappend ans [list text $mp/scan/2.0]
testouterr_cmd_re sh {paths -T scan@default foo=val4} $ans $tserr

set tserr ".*
Get modules: {scan scan/2.1 scan/default} matching 'scan@default foo=val2' in '$mpre'
Get modules: {scan/2.1 scan} matching 'scan/2.1' in '$mpre'
.*"
set ans [list]
lappend ans [list text $mp/scan/2.0]
testouterr_cmd_re sh {paths -T scan@default foo=val2} $ans $tserr

set tserr ".*
Get modules: {scan scan/2.1 scan/latest} matching 'scan@latest foo=val4' in '$mpre'
Get modules: {scan/2.1 scan} matching 'scan/2.1' in '$mpre'
.*"
set ans [list]
lappend ans [list text $mp/scan/2.0]
testouterr_cmd_re sh {paths -T scan@latest foo=val4} $ans $tserr

set tserr ".*
Get modules: {scan scan/2.1 scan/latest} matching 'scan@latest foo=val2' in '$mpre'
Get modules: {scan/2.1 scan} matching 'scan/2.1' in '$mpre'
.*"
set ans [list]
lappend ans [list text $mp/scan/2.0]
testouterr_cmd_re sh {paths -T scan@latest foo=val2} $ans $tserr

set tserr ".*
Get modules: {scan/2.0 scan} matching 'scan@1.1:2.0 foo=val4' in '$mpre'"
set ans [list]
lappend ans [list text $mp/scan/2.0]
testouterr_cmd_re sh {paths -T scan@1.1:2.0 foo=val4} $ans $tserr

set tserr ".*
Get modules: {scan/2.0 scan/1.1 scan/2.1 scan} matching 'scan@1.1:2.1 foo=val2' in '$mpre'"
set ans [list]
lappend ans [list text $mp/scan/1.0]
lappend ans [list text $mp/scan/2.0]
testouterr_cmd_re sh {paths -T scan@1.1:2.1 foo=val2} $ans $tserr


#
# alias element during scan
#

setenv_var TESTSUITE_SCAN alias1

set ans [list]
lappend ans [list text $mp/scan/1.0]
lappend ans [list text $mp/scan/2.0]
testouterr_cmd sh {paths foo=val3} $ans {}

set ans [list]
lappend ans [list text $mp/scan/1.0]
testouterr_cmd sh {paths foo=val4} $ans {}

# matching name, but no variant in an alias
# FIXME: may change if resolution to target is applied on paths
testouterr_cmd sh {paths scan/alias foo=val4} OK {}

testouterr_cmd sh {paths scan/alias foo=val5} OK {}

set tserr ".*
Get modules: {scan/1.1 scan scan/1.0} matching 'foo=val4' in '$mpre'"
set ans [list]
lappend ans [list text $mp/scan/1.0]
testouterr_cmd_re sh {paths -T foo=val4} $ans $tserr

# with global symbol
setenv_var MODULERCFILE $env(TESTSUITEDIR)/etc/modulerc.scan

testouterr_cmd sh {paths scan/glalias foo=val4} OK {}
testouterr_cmd sh {paths scanalias foo=val4} OK {}

# no extra match filter
set ans [list]
lappend ans [list text $mp/scan/1.0]
lappend ans [list text $mp/scan/2.0]
testouterr_cmd sh {paths scan} $ans {}

set tserr ".*
Get modules: {scan/1.1 scan scan/1.0} matching 'foo=val4' in '$mpre'"
set ans [list]
lappend ans [list text $mp/scan/1.0]
testouterr_cmd_re sh {paths -T foo=val4} $ans $tserr

set tserr ".*
Get modules: {scan scan/1.0} matching 'scan@:1.0 foo=val4' in '$mpre'"
set ans [list]
lappend ans [list text $mp/scan/1.0]
testouterr_cmd_re sh {paths -T scan@:1.0 foo=val4} $ans $tserr
setenv_var MODULERCFILE $ORIG_MODULERCFILE


#
#  Cleanup
#

reset_test_env
