##############################################################################
#   Modules Release Tcl
#   Providing a flexible user environment
#
#   File:		modules.61-coll/%M%
#   Revision:		%I%
#   First Edition:	2016/08/02
#   Last Mod.:		%U%, %G%
#
#   Authors:		Xavier Delaruelle, xavier.delaruelle@cea.fr
#
#   Description:	Testuite testsequence
#   Command:
#   Modulefiles:
#   Sub-Command:
#
#   Comment:	%C{
#			Test the module 'restore' command
#		}C%
#
##############################################################################

set cbadnerrmsg "ERROR: Collection $collbadn does not exist or is not readable"
set cderrmsg "load $cdmod4"
set c1errmsg "load $c1mod5\nload $c1mod6"
set c2errmsg "unload $c1mod6\nunload $c1mod5\nunload $cdmod4\nload $c2mod4\nload $c2mod5\nload $c2mod6"
set c3errmsg ""

set lmfmod_sh "_LMFILES__modshare=(.*); export _LMFILES__modshare;"
set lmmod_sh "LOADEDMODULES_modshare=(.*); export LOADEDMODULES_modshare;"
set modpathmod_sh "MODULEPATH_modshare=(.*); export MODULEPATH_modshare;"
set err_sh "/bin/false;"
set nop_sh "/bin/true;"

set lmfmod_csh "setenv _LMFILES__modshare (.*);"
set lmmod_csh "setenv LOADEDMODULES_modshare (.*);"
set modpathmod_csh "setenv MODULEPATH_modshare (.*);"
set err_csh "$err_sh"
set nop_csh "$nop_sh"

set lmfmod_fish "set -xg _LMFILES__modshare (.*);"
set lmmod_fish "set -xg LOADEDMODULES_modshare (.*);"
set modpathmod_fish "set -xg MODULEPATH_modshare (.*);"
set err_fish "$err_sh"
set nop_fish "$nop_sh"

set lmfmod_tcl "set env\\\(_LMFILES__modshare\\\) (.*);"
set lmmod_tcl "set env\\\(LOADEDMODULES_modshare\\\) (.*);"
set modpathmod_tcl "set env\\\(MODULEPATH_modshare\\\) (.*);"
set err_tcl "exec /bin/false;"
set nop_tcl "exec /bin/true;"

set lmfmod_perl "\\\$ENV{\'_LMFILES__modshare\'} = \'(.*)\';"
set lmmod_perl "\\\$ENV{\'LOADEDMODULES_modshare\'} = \'(.*)\';"
set modpathmod_perl "\\\$ENV{\'MODULEPATH_modshare\'} = \'(.*)\';"
set err_perl "die \"modulefile.tcl: 1 error(s) detected!\\n\""
set nop_perl "1;"

set lmfmod_python "os.environ\\\[\'_LMFILES__modshare\'\\\] = \'(.*)\'"
set lmmod_python "os.environ\\\[\'LOADEDMODULES_modshare\'\\\] = \'(.*)\'"
set modpathmod_python "os.environ\\\[\'MODULEPATH_modshare\'\\\] = \'(.*)\'"
set err_python "raise RuntimeError( 'modulefile.tcl: 1 error(s) detected!')"
set nop_python ""

set lmfmod_lisp "\\\(setenv \"_LMFILES__modshare\" \"(.*)\"\\\)"
set lmmod_lisp "\\\(setenv \"LOADEDMODULES_modshare\" \"(.*)\"\\\)"
set modpathmod_lisp "\\\(setenv \"MODULEPATH_modshare\" \"(.*)\"\\\)"
set err_lisp "(error \"modulefile.tcl: 1 error(s) detected!\")"
set nop_lisp "t"


# set HOME to location containing collections
set ORIG_HOME $env(HOME)
if { $verbose > 0 } {
    send_user "\tSetup HOME = $homewithcoll\n"
}
set env(HOME) "$homewithcoll"


#
# test restoring nonexistent collection
#

testouterr_cmd "sh" "restore $collbadn" "$err_sh" "$cbadnerrmsg"
testouterr_cmd "bash" "restore $collbadn" "$err_sh" "$cbadnerrmsg"
testouterr_cmd "ksh" "restore $collbadn" "$err_sh" "$cbadnerrmsg"
testouterr_cmd "zsh" "restore $collbadn" "$err_sh" "$cbadnerrmsg"
testouterr_cmd "csh" "restore $collbadn" "$err_csh" "$cbadnerrmsg"
testouterr_cmd "tcsh" "restore $collbadn" "$err_csh" "$cbadnerrmsg"
testouterr_cmd "fish" "restore $collbadn" "$err_fish" "$cbadnerrmsg"
testouterr_cmd "tcl" "restore $collbadn" "$err_tcl" "$cbadnerrmsg"
testouterr_cmd "perl" "restore $collbadn" "$err_perl" "$cbadnerrmsg"
testouterr_cmd "python" "restore $collbadn" "$err_python" "$cbadnerrmsg"
testouterr_cmd "lisp" "restore $collbadn" "$err_lisp" "$cbadnerrmsg"


#
# test restoring default collection
#

set lmf_sh "_LMFILES_=$cdlmf; export _LMFILES_;"
set lm_sh "LOADEDMODULES=$cdlm; export LOADEDMODULES;"
set modpath_sh "MODULEPATH=$cdmodpath; export MODULEPATH;"
set ts_sh "$lmfmod_sh\n$lmmod_sh\n(.*);\n$modpathmod_sh\n(.*);\n$lmf_sh\n$lm_sh\n(.*);\n(.*);\n$modpath_sh\$"

set lmf_csh "setenv _LMFILES_ $cdlmf;"
set lm_csh "setenv LOADEDMODULES $cdlm;"
set modpath_csh "setenv MODULEPATH $cdmodpath;"
set ts_csh "$lmfmod_csh\n$lmmod_csh\n(.*);\n$modpathmod_csh\n(.*);\n$lmf_csh\n$lm_csh\n(.*);\n(.*);\n$modpath_csh\$"

set lmf_fish "set -xg _LMFILES_ $cdlmf;"
set lm_fish "set -xg LOADEDMODULES $cdlm;"
set modpath_fish "set -xg MODULEPATH $cdmodpath;"
set ts_fish "$lmfmod_fish\n$lmmod_fish\n(.*);\n$modpathmod_fish\n(.*);\n$lmf_fish\n$lm_fish\n(.*);\n(.*);\n$modpath_fish\$"

set lmf_tcl "set env\\\(_LMFILES_\\) $cdlmf;"
set lm_tcl "set env\\\(LOADEDMODULES\\\) $cdlm;"
set modpath_tcl "set env\\\(MODULEPATH\\\) $cdmodpath;"
set ts_tcl "$lmfmod_tcl\n$lmmod_tcl\n(.*);\n$modpathmod_tcl\n(.*);\n$lmf_tcl\n$lm_tcl\n(.*);\n(.*);\n$modpath_tcl\$"

set lmf_perl "\\\$ENV{\'_LMFILES_\'} = \'$cdlmf\';"
set lm_perl "\\\$ENV{\'LOADEDMODULES\'} = \'$cdlm\';"
set modpath_perl "\\\$ENV{\'MODULEPATH\'} = \'$cdmodpath\';"
set ts_perl "$lmfmod_perl\n$lmmod_perl\n(.*);\n$modpathmod_perl\n(.*);\n$lmf_perl\n$lm_perl\n(.*);\n(.*);\n$modpath_perl\n1;\$"

set lmf_python "os.environ\\\[\'_LMFILES_\'\\\] = \'$cdlmf\'"
set lm_python "os.environ\\\[\'LOADEDMODULES\'\\\] = \'$cdlm\'"
set modpath_python "os.environ\\\[\'MODULEPATH\'\\\] = \'$cdmodpath\'"
set ts_python "import os\n$lmfmod_python\n$lmmod_python\n(.*)\n$modpathmod_python\n(.*)\n$lmf_python\n$lm_python\n(.*)\n(.*)\n$modpath_python\$"

set lmf_lisp "\\\(setenv \"_LMFILES_\" \"$cdlmf\"\\\)"
set lm_lisp "\\\(setenv \"LOADEDMODULES\" \"$cdlm\"\\\)"
set modpath_lisp "\\\(setenv \"MODULEPATH\" \"$cdmodpath\"\\\)"
set ts_lisp "$lmfmod_lisp\n$lmmod_lisp\n(.*)\n$modpathmod_lisp\n(.*)\n$lmf_lisp\n$lm_lisp\n(.*)\n(.*)\n$modpath_lisp\$"


testouterr_cmd_re "sh" "restore" "$ts_sh" "$cderrmsg"
testouterr_cmd_re "bash" "restore" "$ts_sh" "$cderrmsg"
testouterr_cmd_re "ksh" "restore" "$ts_sh" "$cderrmsg"
testouterr_cmd_re "zsh" "restore" "$ts_sh" "$cderrmsg"
testouterr_cmd_re "csh" "restore" "$ts_csh" "$cderrmsg"
testouterr_cmd_re "tcsh" "restore" "$ts_csh" "$cderrmsg"
testouterr_cmd_re "fish" "restore" "$ts_fish" "$cderrmsg"
testouterr_cmd_re "tcl" "restore" "$ts_tcl" "$cderrmsg"
testouterr_cmd_re "perl" "restore" "$ts_perl" "$cderrmsg"
testouterr_cmd_re "python" "restore" "$ts_python" "$cderrmsg"
testouterr_cmd_re "lisp" "restore" "$ts_lisp" "$cderrmsg"


#
# test restoring collection that only adds path to use and mods to load
#

# fake environment state: default collection restored
set ORIG_MODULEPATH "$env(MODULEPATH)"
if { $verbose > 0 } {
    send_user "\tSetup _LMFILES_ = $cdlmf\n"
    send_user "\tSetup LOADEDMODULES = $cdlm\n"
    send_user "\tSetup MODULEPATH = $cdmodpath\n"
}
set env(_LMFILES_) "$cdlmf"
set env(LOADEDMODULES) "$cdlm"
set env(MODULEPATH) "$cdmodpath"

set lmf_sh "_LMFILES_=$c1lmf; export _LMFILES_;"
set lm_sh "LOADEDMODULES=$c1lm; export LOADEDMODULES;"
set modpath_sh "MODULEPATH=$c1modpath; export MODULEPATH;"
set ts_sh "$lmfmod_sh\n$lmmod_sh\n$modpathmod_sh\n$lmf_sh\n$lm_sh\n$modpath_sh\$"

set lmf_csh "setenv _LMFILES_ $c1lmf;"
set lm_csh "setenv LOADEDMODULES $c1lm;"
set modpath_csh "setenv MODULEPATH $c1modpath;"
set ts_csh "$lmfmod_csh\n$lmmod_csh\n$modpathmod_csh\n$lmf_csh\n$lm_csh\n$modpath_csh\$"

set lmf_fish "set -xg _LMFILES_ $c1lmf;"
set lm_fish "set -xg LOADEDMODULES $c1lm;"
set modpath_fish "set -xg MODULEPATH $c1modpath;"
set ts_fish "$lmfmod_fish\n$lmmod_fish\n$modpathmod_fish\n$lmf_fish\n$lm_fish\n$modpath_fish\$"

set lmf_tcl "set env\\\(_LMFILES_\\) $c1lmf;"
set lm_tcl "set env\\\(LOADEDMODULES\\\) $c1lm;"
set modpath_tcl "set env\\\(MODULEPATH\\\) $c1modpath;"
set ts_tcl "$lmfmod_tcl\n$lmmod_tcl\n$modpathmod_tcl\n$lmf_tcl\n$lm_tcl\n$modpath_tcl\$"

set lmf_perl "\\\$ENV{\'_LMFILES_\'} = \'$c1lmf\';"
set lm_perl "\\\$ENV{\'LOADEDMODULES\'} = \'$c1lm\';"
set modpath_perl "\\\$ENV{\'MODULEPATH\'} = \'$c1modpath\';"
set ts_perl "$lmfmod_perl\n$lmmod_perl\n$modpathmod_perl\n$lmf_perl\n$lm_perl\n$modpath_perl\n1;\$"

set lmf_python "os.environ\\\[\'_LMFILES_\'\\\] = \'$c1lmf\'"
set lm_python "os.environ\\\[\'LOADEDMODULES\'\\\] = \'$c1lm\'"
set modpath_python "os.environ\\\[\'MODULEPATH\'\\\] = \'$c1modpath\'"
set ts_python "import os\n$lmfmod_python\n$lmmod_python\n$modpathmod_python\n$lmf_python\n$lm_python\n$modpath_python\$"

set lmf_lisp "\\\(setenv \"_LMFILES_\" \"$c1lmf\"\\\)"
set lm_lisp "\\\(setenv \"LOADEDMODULES\" \"$c1lm\"\\\)"
set modpath_lisp "\\\(setenv \"MODULEPATH\" \"$c1modpath\"\\\)"
set ts_lisp "$lmfmod_lisp\n$lmmod_lisp\n$modpathmod_lisp\n$lmf_lisp\n$lm_lisp\n$modpath_lisp\$"


testouterr_cmd_re "sh" "restore $coll1" "$ts_sh" "$c1errmsg"
testouterr_cmd_re "bash" "restore $coll1" "$ts_sh" "$c1errmsg"
testouterr_cmd_re "ksh" "restore $coll1" "$ts_sh" "$c1errmsg"
testouterr_cmd_re "zsh" "restore $coll1" "$ts_sh" "$c1errmsg"
testouterr_cmd_re "csh" "restore $coll1" "$ts_csh" "$c1errmsg"
testouterr_cmd_re "tcsh" "restore $coll1" "$ts_csh" "$c1errmsg"
testouterr_cmd_re "fish" "restore $coll1" "$ts_fish" "$c1errmsg"
testouterr_cmd_re "tcl" "restore $coll1" "$ts_tcl" "$c1errmsg"
testouterr_cmd_re "perl" "restore $coll1" "$ts_perl" "$c1errmsg"
testouterr_cmd_re "python" "restore $coll1" "$ts_python" "$c1errmsg"
testouterr_cmd_re "lisp" "restore $coll1" "$ts_lisp" "$c1errmsg"


#
# test restoring exact same collection, nothing should happen
#

# fake environment state: $coll1 collection restored
if { $verbose > 0 } {
    send_user "\tSetup _LMFILES_ = $c1lmf\n"
    send_user "\tSetup LOADEDMODULES = $c1lm\n"
    send_user "\tSetup MODULEPATH = $c1modpath\n"
}
set env(_LMFILES_) "$c1lmf"
set env(LOADEDMODULES) "$c1lm"
set env(MODULEPATH) "$c1modpath"

testouterr_cmd "sh" "restore $coll1" "$nop_sh" ""
testouterr_cmd "bash" "restore $coll1" "$nop_sh" ""
testouterr_cmd "ksh" "restore $coll1" "$nop_sh" ""
testouterr_cmd "zsh" "restore $coll1" "$nop_sh" ""
testouterr_cmd "csh" "restore $coll1" "$nop_csh" ""
testouterr_cmd "tcsh" "restore $coll1" "$nop_csh" ""
testouterr_cmd "fish" "restore $coll1" "$nop_fish" ""
testouterr_cmd "tcl" "restore $coll1" "$nop_tcl" ""
testouterr_cmd "perl" "restore $coll1" "$nop_perl\n1;" ""
testouterr_cmd "python" "restore $coll1" "import os$nop_python" ""
testouterr_cmd "lisp" "restore $coll1" "$nop_lisp" ""


#
# test restoring collection unload some modules
# to reload them in correct order
#

set lmf_sh "_LMFILES_=$c2lmf; export _LMFILES_;"
set lm_sh "LOADEDMODULES=$c2lm; export LOADEDMODULES;"
set ts_sh "$lmfmod_sh\n$lmmod_sh\n$lmf_sh\n$lm_sh\$"

set lmf_csh "setenv _LMFILES_ $c2lmf;"
set lm_csh "setenv LOADEDMODULES $c2lm;"
set ts_csh "$lmfmod_csh\n$lmmod_csh\n$lmf_csh\n$lm_csh\$"

set lmf_fish "set -xg _LMFILES_ $c2lmf;"
set lm_fish "set -xg LOADEDMODULES $c2lm;"
set ts_fish "$lmfmod_fish\n$lmmod_fish\n$lmf_fish\n$lm_fish\$"

set lmf_tcl "set env\\\(_LMFILES_\\) $c2lmf;"
set lm_tcl "set env\\\(LOADEDMODULES\\\) $c2lm;"
set ts_tcl "$lmfmod_tcl\n$lmmod_tcl\n$lmf_tcl\n$lm_tcl\$"

set lmf_perl "\\\$ENV{\'_LMFILES_\'} = \'$c2lmf\';"
set lm_perl "\\\$ENV{\'LOADEDMODULES\'} = \'$c2lm\';"
set ts_perl "$lmfmod_perl\n$lmmod_perl\n$lmf_perl\n$lm_perl\n1;\$"

set lmf_python "os.environ\\\[\'_LMFILES_\'\\\] = \'$c2lmf\'"
set lm_python "os.environ\\\[\'LOADEDMODULES\'\\\] = \'$c2lm\'"
set ts_python "import os\n$lmfmod_python\n$lmmod_python\n$lmf_python\n$lm_python\$"

set lmf_lisp "\\\(setenv \"_LMFILES_\" \"$c2lmf\"\\\)"
set lm_lisp "\\\(setenv \"LOADEDMODULES\" \"$c2lm\"\\\)"
set ts_lisp "$lmfmod_lisp\n$lmmod_lisp\n$lmf_lisp\n$lm_lisp\$"


testouterr_cmd_re "sh" "restore $coll2" "$ts_sh" "$c2errmsg"
testouterr_cmd_re "bash" "restore $coll2" "$ts_sh" "$c2errmsg"
testouterr_cmd_re "ksh" "restore $coll2" "$ts_sh" "$c2errmsg"
testouterr_cmd_re "zsh" "restore $coll2" "$ts_sh" "$c2errmsg"
testouterr_cmd_re "csh" "restore $coll2" "$ts_csh" "$c2errmsg"
testouterr_cmd_re "tcsh" "restore $coll2" "$ts_csh" "$c2errmsg"
testouterr_cmd_re "fish" "restore $coll2" "$ts_fish" "$c2errmsg"
testouterr_cmd_re "tcl" "restore $coll2" "$ts_tcl" "$c2errmsg"
testouterr_cmd_re "perl" "restore $coll2" "$ts_perl" "$c2errmsg"
testouterr_cmd_re "python" "restore $coll2" "$ts_python" "$c2errmsg"
testouterr_cmd_re "lisp" "restore $coll2" "$ts_lisp" "$c2errmsg"


#
# test restoring collection that reorder used paths
# no change on loaded modules
#

# fake environment state: $coll2 collection restored
if { $verbose > 0 } {
    send_user "\tSetup _LMFILES_ = $c2lmf\n"
    send_user "\tSetup LOADEDMODULES = $c2lm\n"
    send_user "\tSetup MODULEPATH = $c2modpath\n"
}
set env(_LMFILES_) "$c2lmf"
set env(LOADEDMODULES) "$c2lm"
set env(MODULEPATH) "$c2modpath"

set modpath_sh "MODULEPATH=$c3modpath; export MODULEPATH;"
set ts_sh "$modpathmod_sh\n$modpath_sh\$"

set modpath_csh "setenv MODULEPATH $c3modpath;"
set ts_csh "$modpathmod_csh\n$modpath_csh\$"

set modpath_fish "set -xg MODULEPATH $c3modpath;"
set ts_fish "$modpathmod_fish\n$modpath_fish\$"

set modpath_tcl "set env\\\(MODULEPATH\\\) $c3modpath;"
set ts_tcl "$modpathmod_tcl\n$modpath_tcl\$"

set modpath_perl "\\\$ENV{\'MODULEPATH\'} = \'$c3modpath\';"
set ts_perl "$modpathmod_perl\n$modpath_perl\n1;\$"

set modpath_python "os.environ\\\[\'MODULEPATH\'\\\] = \'$c3modpath\'"
set ts_python "import os\n$modpathmod_python\n$modpath_python\$"

set modpath_lisp "\\\(setenv \"MODULEPATH\" \"$c3modpath\"\\\)"
set ts_lisp "$modpathmod_lisp\n$modpath_lisp\$"


testouterr_cmd_re "sh" "restore $coll3" "$ts_sh" "$c3errmsg"
testouterr_cmd_re "bash" "restore $coll3" "$ts_sh" "$c3errmsg"
testouterr_cmd_re "ksh" "restore $coll3" "$ts_sh" "$c3errmsg"
testouterr_cmd_re "zsh" "restore $coll3" "$ts_sh" "$c3errmsg"
testouterr_cmd_re "csh" "restore $coll3" "$ts_csh" "$c3errmsg"
testouterr_cmd_re "tcsh" "restore $coll3" "$ts_csh" "$c3errmsg"
testouterr_cmd_re "fish" "restore $coll3" "$ts_fish" "$c3errmsg"
testouterr_cmd_re "tcl" "restore $coll3" "$ts_tcl" "$c3errmsg"
testouterr_cmd_re "perl" "restore $coll3" "$ts_perl" "$c3errmsg"
testouterr_cmd_re "python" "restore $coll3" "$ts_python" "$c3errmsg"
testouterr_cmd_re "lisp" "restore $coll3" "$ts_lisp" "$c3errmsg"


#
# Cleanup
#

# restore default testsuite home
if { $verbose > 0 } {
    send_user "\tRestore HOME = $ORIG_HOME\n"
}
set env(HOME) $ORIG_HOME
unset ORIG_HOME

# restore environment
if { $verbose > 0 } {
    send_user "\tRestore _LMFILES_ = ''\n"
    send_user "\tRestore LOADEDMODULES = ''\n"
    send_user "\tRestore MODULEPATH = $ORIG_MODULEPATH\n"
}
unset env(_LMFILES_)
unset env(LOADEDMODULES)
set env(MODULEPATH) "$ORIG_MODULEPATH"
unset ORIG_MODULEPATH

unset ts_sh
unset modpath_sh
unset lm_sh
unset lmf_sh
unset err_sh
unset nop_sh
unset modpathmod_sh
unset lmmod_sh
unset lmfmod_sh

unset ts_csh
unset modpath_csh
unset lm_csh
unset lmf_csh
unset err_csh
unset nop_csh
unset modpathmod_csh
unset lmmod_csh
unset lmfmod_csh

unset ts_fish
unset modpath_fish
unset lm_fish
unset lmf_fish
unset err_fish
unset nop_fish
unset modpathmod_fish
unset lmmod_fish
unset lmfmod_fish

unset ts_tcl
unset modpath_tcl
unset lm_tcl
unset lmf_tcl
unset err_tcl
unset nop_tcl
unset modpathmod_tcl
unset lmmod_tcl
unset lmfmod_tcl

unset ts_perl
unset modpath_perl
unset lm_perl
unset lmf_perl
unset err_perl
unset nop_perl
unset modpathmod_perl
unset lmmod_perl
unset lmfmod_perl

unset ts_python
unset modpath_python
unset lm_python
unset lmf_python
unset err_python
unset nop_python
unset modpathmod_python
unset lmmod_python
unset lmfmod_python

unset ts_lisp
unset modpath_lisp
unset lm_lisp
unset lmf_lisp
unset err_lisp
unset nop_lisp
unset modpathmod_lisp
unset lmmod_lisp
unset lmfmod_lisp

unset cbadnerrmsg
unset cderrmsg
unset c1errmsg
unset c2errmsg
unset c3errmsg

