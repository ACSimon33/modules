##############################################################################
#   Modules Revision 3.0
#   Providing a flexible user environment
#
#   File:		modules.61-coll/%M%
#   Revision:		%I%
#   First Edition:	2017/06/27
#   Last Mod.:		%U%, %G%
#
#   Authors:		Xavier Delaruelle, xavier.delaruelle@cea.fr
#
#   Description:	Testuite testsequence
#   Command:		savelist, save, restore, saverm, saveshow
#   Modulefiles:
#   Sub-Command:
#
#   Comment:	%C{
#			Handling of collections when access rights to get to it
#           does not allow it
#		}C%
#
##############################################################################

# cannot test access if superuser privileges are in use
if {$tcl_platform(user) eq "root"} {
    send_user "\tskipping access tests as tests are run by superuser\n"
} else {

#
# Variables for this test
#

set header_coll "Named collection list:"
set coll_list "$coll1\n${coll1}.save\n$coll2\n$coll3\n$coll4f\n$colld\ninfocmd\ninfocmdexp"

set lmfmod_sh "_LMFILES__modshare=(.*); export _LMFILES__modshare;"
set lmmod_sh "LOADEDMODULES_modshare=(.*); export LOADEDMODULES_modshare;"
set modpathmod_sh "MODULEPATH_modshare=(.*); export MODULEPATH_modshare;"
set lmf_sh "_LMFILES_=$c1lmf; export _LMFILES_;"
set lm_sh "LOADEDMODULES=$c1lm; export LOADEDMODULES;"
set modpath_sh "MODULEPATH=$c1modpath; export MODULEPATH;"
set ts_sh "unset mload;\n$modpathmod_sh\nt15=t15; export t15;\n$lmf_sh\n$lm_sh\ntestsuite=yes; export testsuite;\nMODULE_VERSION=1.10; export MODULE_VERSION;"
set c1errmsg "load $cdmod4\nload $c1mod5\nload $c1mod6"

set pheader "$modlin $env(MODULEPATH) $modlin"
set read_msg "$error_msgs: Collection $coll1 cannot be read."
set save_msg "$error_msgs: Collection $coll1 cannot be saved."
set found_msg "$error_msgs: Collection $coll1 cannot be found"
set perm_msg "couldn't open \"$coll1fp\": permission denied"
set accessdir_msg "$error_msgs: Cannot access collection directory."
set permdir_msg "couldn't read directory \"$homewithcolldotmod/\": permission denied"
set delete_msg "$error_msgs: Collection $coll1 cannot be removed."
set permdel_msg "error deleting \"$coll1fp\": permission denied"
set rmc1errmsg "couldn't open \"$coll1fp\": no such file or directory"
set hide_perms "ugo-rx"
set write_perms "ugo-w"

# set HOME to location containing collections
set ORIG_HOME $env(HOME)
if { $verbose > 0 } {
    send_user "\tSetup HOME = $homewithcoll\n"
}
set env(HOME) "$homewithcoll"

# backup collection that will be altered by tests
set coll1fpsave "${coll1fp}.save"
file copy -force $coll1fp $coll1fpsave


#
# Test access to collection when read access not granted on this collection
#

change_file_perms $coll1fp $hide_perms

testouterr_cmd "sh" "savelist -t" "" "$header_coll\n$coll_list"
testouterr_cmd "sh" "saveshow $coll1" "ERR" "$read_msg\n$perm_msg"
testouterr_cmd "sh" "restore $coll1" "ERR" "$read_msg\n$perm_msg"
testouterr_cmd "sh" "save $coll1" "" ""
testoutfile_cmd "sh" "saverm $coll1" "" "$coll1fp" "$rmc1errmsg"

# restore altered collection and permissions
file copy -force $coll1fpsave $coll1fp
restore_file_perms $coll1fp


#
# Test access to collection when write access not granted on this collection
#

change_file_perms $coll1fp $write_perms

testouterr_cmd "sh" "savelist -t" "" "$header_coll\n$coll_list"
testouterr_cmd_re "sh" "saveshow $coll1" "^\$" "\[-\]+\n$coll1fp:\n\n$c1cont1\n\[-\]+$"
testouterr_cmd_re "sh" "restore $coll1" "^$lmfmod_sh\n$lmmod_sh\n$ts_sh\n$modpath_sh\$" "^$c1errmsg\$"
testouterr_cmd "sh" "save $coll1" "ERR" "$save_msg\n$perm_msg"
testoutfile_cmd "sh" "saverm $coll1" "" "$coll1fp" "$rmc1errmsg"

# restore altered collection and permissions
file copy -force $coll1fpsave $coll1fp
restore_file_perms $coll1fp


#
# Test access to collection when read access not granted on its upper directory
#

change_file_perms $homewithcolldotmod $hide_perms

testouterr_cmd "sh" "savelist -t" "ERR" "$accessdir_msg\n$permdir_msg"
testouterr_cmd "sh" "saveshow $coll1" "ERR" "$found_msg"
testouterr_cmd "sh" "restore $coll1" "ERR" "$found_msg"
testouterr_cmd "sh" "save $coll1" "ERR" "$save_msg\n$perm_msg"
testouterr_cmd "sh" "saverm $coll1" "ERR" "$found_msg"

# restore altered collection and permissions
restore_file_perms $homewithcolldotmod
file copy -force $coll1fpsave $coll1fp


#
# Test access to collection when write access not granted on its upper directory
#

change_file_perms $homewithcolldotmod $write_perms

testouterr_cmd "sh" "savelist -t" "" "$header_coll\n$coll_list"
testouterr_cmd_re "sh" "saveshow $coll1" "^\$" "\[-\]+\n$coll1fp:\n\n$c1cont1\n\[-\]+$"
testouterr_cmd_re "sh" "restore $coll1" "^$lmfmod_sh\n$lmmod_sh\n$ts_sh\n$modpath_sh\$" "^$c1errmsg\$"
testouterr_cmd "sh" "save $coll1" "" ""
testouterr_cmd "sh" "saverm $coll1" "ERR" "$delete_msg\n$permdel_msg"

# restore altered collection and permissions
restore_file_perms $homewithcolldotmod
file copy -force $coll1fpsave $coll1fp


#
# Cleanup
#

# restore default testsuite home
if { $verbose > 0 } {
    send_user "\tRestore HOME = $ORIG_HOME\n"
}
set env(HOME) $ORIG_HOME
unset ORIG_HOME

# remove collection backup
file delete $coll1fpsave
unset coll1fpsave

unset pheader
unset read_msg
unset save_msg
unset found_msg
unset perm_msg
unset accessdir_msg
unset permdir_msg
unset delete_msg
unset permdel_msg
unset rmc1errmsg
unset hide_perms
unset write_perms

unset lmfmod_sh
unset lmmod_sh
unset modpathmod_sh
unset lmf_sh
unset lm_sh
unset modpath_sh
unset ts_sh
unset c1errmsg

unset header_coll
unset coll_list

}
