##############################################################################
#   Modules Release Tcl
#   Providing a flexible user environment
#
#   File:		modules.61-coll/%M%
#   Revision:		%I%
#   First Edition:	2016/08/16
#   Last Mod.:		%U%, %G%
#
#   Authors:		Xavier Delaruelle, xavier.delaruelle@cea.fr
#
#   Description:	Testuite testsequence
#   Command:
#   Modulefiles:
#   Sub-Command:
#
#   Comment:	%C{
#			Test the module 'saveshow' command
#		}C%
#
##############################################################################

set cbadnerrmsg "ERROR: Collection $collbadn cannot be found"
set cbadfperrmsg "ERROR: Collection $collbadfp cannot be found"
set cbadterrmsg "ERROR: Collection $colld (for target \"$colltarget\") cannot be found"
set badcontfp "$homewithcoll/.Xresources"
set badcontfperrmsg "ERROR: $badcontfp is not a valid collection"


# set HOME to location containing collections
set ORIG_HOME $env(HOME)
if { $verbose > 0 } {
    send_user "\tSetup HOME = $homewithcoll\n"
}
set env(HOME) "$homewithcoll"


#
# test showing nonexistent collection
#

testouterr_cmd "sh" "saveshow $collbadn" "ERR" "$cbadnerrmsg"
testouterr_cmd "bash" "saveshow $collbadn" "ERR" "$cbadnerrmsg"
testouterr_cmd "ksh" "saveshow $collbadn" "ERR" "$cbadnerrmsg"
testouterr_cmd "zsh" "saveshow $collbadn" "ERR" "$cbadnerrmsg"
testouterr_cmd "csh" "saveshow $collbadn" "ERR" "$cbadnerrmsg"
testouterr_cmd "tcsh" "saveshow $collbadn" "ERR" "$cbadnerrmsg"
testouterr_cmd "fish" "saveshow $collbadn" "ERR" "$cbadnerrmsg"
testouterr_cmd "tcl" "saveshow $collbadn" "ERR" "$cbadnerrmsg"
testouterr_cmd "perl" "saveshow $collbadn" "ERR" "$cbadnerrmsg"
testouterr_cmd "python" "saveshow $collbadn" "ERR" "$cbadnerrmsg"
testouterr_cmd "lisp" "saveshow $collbadn" "ERR" "$cbadnerrmsg"


#
# test showing nonexistent collection specified as a filepath
#

testouterr_cmd "sh" "saveshow $collbadfp" "ERR" "$cbadfperrmsg"
testouterr_cmd "bash" "saveshow $collbadfp" "ERR" "$cbadfperrmsg"
testouterr_cmd "ksh" "saveshow $collbadfp" "ERR" "$cbadfperrmsg"
testouterr_cmd "zsh" "saveshow $collbadfp" "ERR" "$cbadfperrmsg"
testouterr_cmd "csh" "saveshow $collbadfp" "ERR" "$cbadfperrmsg"
testouterr_cmd "tcsh" "saveshow $collbadfp" "ERR" "$cbadfperrmsg"
testouterr_cmd "fish" "saveshow $collbadfp" "ERR" "$cbadfperrmsg"
testouterr_cmd "tcl" "saveshow $collbadfp" "ERR" "$cbadfperrmsg"
testouterr_cmd "perl" "saveshow $collbadfp" "ERR" "$cbadfperrmsg"
testouterr_cmd "python" "saveshow $collbadfp" "ERR" "$cbadfperrmsg"
testouterr_cmd "lisp" "saveshow $collbadfp" "ERR" "$cbadfperrmsg"


#
# test showing existent file which is not a collection
#

testouterr_cmd "sh" "saveshow $badcontfp" "ERR" "$badcontfperrmsg"
testouterr_cmd "bash" "saveshow $badcontfp" "ERR" "$badcontfperrmsg"
testouterr_cmd "ksh" "saveshow $badcontfp" "ERR" "$badcontfperrmsg"
testouterr_cmd "zsh" "saveshow $badcontfp" "ERR" "$badcontfperrmsg"
testouterr_cmd "csh" "saveshow $badcontfp" "ERR" "$badcontfperrmsg"
testouterr_cmd "tcsh" "saveshow $badcontfp" "ERR" "$badcontfperrmsg"
testouterr_cmd "fish" "saveshow $badcontfp" "ERR" "$badcontfperrmsg"
testouterr_cmd "tcl" "saveshow $badcontfp" "ERR" "$badcontfperrmsg"
testouterr_cmd "perl" "saveshow $badcontfp" "ERR" "$badcontfperrmsg"
testouterr_cmd "python" "saveshow $badcontfp" "ERR" "$badcontfperrmsg"
testouterr_cmd "lisp" "saveshow $badcontfp" "ERR" "$badcontfperrmsg"


#
# test showing default collection
#

# test only sh shell as this test does not produce shell output
testouterr_cmd_re "sh" "saveshow" "" "\[-\]+\n$homewithcolldotmod/$colld:\n\n$cdcont\n\[-\]+$"


#
# test showing named collection
# using old fashioned way to define paths (no --append property)
#

# test only sh shell as this test does not produce shell output
testouterr_cmd_re "sh" "saveshow $coll1" "" "\[-\]+\n$homewithcolldotmod/$coll1:\n\n$c1cont1\n\[-\]+$"


#
# test showing collection specified as a filepath when
# MODULES_COLLECTION_TARGET is set. target should be ignored
#

# setup environment state
if { $verbose > 0 } {
    send_user "\tSetup MODULES_COLLECTION_TARGET = $colltarget\n"
}
set env(MODULES_COLLECTION_TARGET) "$colltarget"

# test only sh shell as this test does not produce shell output
testouterr_cmd_re "sh" "saveshow $homewithcolldotmod/$coll1" "" "\[-\]+\n$homewithcolldotmod/$coll1:\n\n$c1cont1\n\[-\]+$"


#
# test showing collection not mentionning module to load
# when MODULES_COLLECTION_TARGET is set
#

# test only sh shell as this test does not produce shell output
testouterr_cmd_re "sh" "saveshow $coll4" "" "\[-\]+\n$homewithcolldotmod/$coll4f:\n\n$c4cont\n\[-\]+$"


#
# test showing nonexistent default collection when
# MODULES_COLLECTION_TARGET is set
#

testouterr_cmd "sh" "saveshow" "ERR" "$cbadterrmsg"
testouterr_cmd "bash" "saveshow" "ERR" "$cbadterrmsg"
testouterr_cmd "ksh" "saveshow" "ERR" "$cbadterrmsg"
testouterr_cmd "zsh" "saveshow" "ERR" "$cbadterrmsg"
testouterr_cmd "csh" "saveshow" "ERR" "$cbadterrmsg"
testouterr_cmd "tcsh" "saveshow" "ERR" "$cbadterrmsg"
testouterr_cmd "fish" "saveshow" "ERR" "$cbadterrmsg"
testouterr_cmd "tcl" "saveshow" "ERR" "$cbadterrmsg"
testouterr_cmd "perl" "saveshow" "ERR" "$cbadterrmsg"
testouterr_cmd "python" "saveshow" "ERR" "$cbadterrmsg"
testouterr_cmd "lisp" "saveshow" "ERR" "$cbadterrmsg"


#
# Cleanup
#

# restore default testsuite home
if { $verbose > 0 } {
    send_user "\tRestore HOME = $ORIG_HOME\n"
}
set env(HOME) $ORIG_HOME
unset ORIG_HOME

# restore environment
if { $verbose > 0 } {
    send_user "\tRestore MODULES_COLLECTION_TARGET = ''\n"
}
unset env(MODULES_COLLECTION_TARGET)

unset cbadnerrmsg
unset cbadfperrmsg
unset cbadterrmsg
unset badcontfp
unset badcontfperrmsg

