##############################################################################
#   Modules Release Tcl
#   Providing a flexible user environment
#
#   File:		modules.91-sort/%M%
#   Revision:		%I%
#   First Edition:	2016/02/06
#   Last Mod.:		%U%, %G%
#
#   Authors:		Xavier Delaruelle, xavier.delaruelle@cea.fr
#
#   Description:	Testuite testsequence
#   Command:		avail
#   Modulefiles:	verssort/1, verssort/1.2.1, verssort/1.2.4,
#                   verssort/1.8-2015-12-01, verssort/1.8-2016-02-01,
#                   verssort/1.10, averssort, version/dir2, loc_rc7
#   Sub-Command:
#
#   Comment:	%C{
#			Check the module 'avail' command in terse output mode
#           for a module with multiple versions to check these
#           versions are correctly sorted.
#		}C%
#
##############################################################################

set header "\[-\]+ $MODULEPATH \[-\]+\n"

#
#  tests on regular modulefiles
#

set ts_sh "$header$module/$version1\n$module/$version2\n$module/$version3\n$module/$version4\n$module/$version5\n$module/$version6"
set ts_implicit_default_sh "$header$module/$version6"
set ts_latest_sh "$header$module/$version6"

testerr_cmd_re "sh" "avail -t $module" "$ts_sh\$"
testerr_cmd_re "sh" "avail -t -d $module" "$ts_implicit_default_sh\$"
testerr_cmd_re "sh" "avail -t -L $module" "$ts_latest_sh\$"

#
#  tests on module aliases
#

set ts_sh "$header$aliasmod/$version1\\(@\\)\n$aliasmod/$version3\\(@\\)\n$aliasmod/$version6\\(@\\)"
set ts_implicit_default_sh "$header$aliasmod/$version6\\(@\\)"
set ts_latest_sh "$header$aliasmod/$version6\\(@\\)"

testerr_cmd_re "sh" "avail -t $aliasmod" "$ts_sh\$"
testerr_cmd_re "sh" "avail -t -d $aliasmod" "$ts_implicit_default_sh\$"
testerr_cmd_re "sh" "avail -t -L $aliasmod" "$ts_latest_sh\$"

#
#  tests on modules mixing modulefiles and aliases
#

set mod2 "loc_rc7"
set mod2vers1 "0.9"
set mod2vers2 "1\\(@\\)"
set mod2vers3 "1.2"
set mod2vers4 "bar\\(@\\)"
set ts_sh "$header$mod2/$mod2vers1\n$mod2/$mod2vers2\n$mod2/$mod2vers3\n$mod2/$mod2vers4"
set ts_default_sh "$header$mod2/$mod2vers4"
set ts_latest_sh "$header$mod2/$mod2vers4"

testerr_cmd_re "sh" "avail -t $mod2" "$ts_sh\$"
testerr_cmd_re "sh" "avail -t -d $mod2" "$ts_default_sh\$"
testerr_cmd_re "sh" "avail -t -L $mod2" "$ts_latest_sh\$"

#
#  tests on modules mixing modulefiles and symbolic versions
#

set mod3 "loc_rc2"
set mod3vers1 "1.0\\(bar:blah:foo\\)"
set mod3vers2 "2.0"
set ts_sh "$header$mod3/$mod3vers1\n$mod3/$mod3vers2"
set ts_default_sh "$header$mod3/$mod3vers2"
set ts_latest_sh "$header$mod3/$mod3vers2"

# symbols even if they hold greatest value should not be taken
# into account for default or latest choice
testerr_cmd_re "sh" "avail -t $mod3" "$ts_sh\$"
testerr_cmd_re "sh" "avail -t -d $mod3" "$ts_default_sh\$"
testerr_cmd_re "sh" "avail -t -L $mod3" "$ts_latest_sh\$"


#
#  tests on deep modules, mixing modulefiles and directories
#

set mod4 "loc_dv6"
set mod4vers1 "1.0"
set mod4vers2 "2.0/1.0"
set ts_sh "$header$mod4/$mod4vers1\n$mod4/$mod4vers2"
set ts_default_sh "$header$mod4/$mod4vers2"
set ts_latest_sh "$header$mod4/$mod4vers2"

testerr_cmd_re "sh" "avail -t $mod4" "$ts_sh\$"
testerr_cmd_re "sh" "avail -t -d $mod4" "$ts_default_sh\$"
testerr_cmd_re "sh" "avail -t -L $mod4" "$ts_latest_sh\$"


# setup environment state
set ORIG_MODULEPATH "$env(MODULEPATH)"
set	modpath	"$env(TESTSUITEDIR)/modulefiles.deep"
if { $verbose > 0 } {
    send_user "\tSetup MODULEPATH = $modpath\n"
}
set env(MODULEPATH) "$modpath"

set header "\[-\]+ $env(MODULEPATH) \[-\]+\n"
set mod5 "version/dir2"
set mod5vers1 "1.0"
set mod5vers2 "2.0\\(default\\)"
set mod5vers3 "2.0/rc1\\(default\\)"
set mod5vers4 "2.0/rc2"
set mod5vers5 "3.0"
set ts_sh "$header$mod5/$mod5vers1\n$mod5/$mod5vers2\n$mod5/$mod5vers3\n$mod5/$mod5vers4\n$mod5/$mod5vers5"
set ts_default_sh "$header$mod5/$mod5vers3"
set ts_latest_sh "$header$mod5/$mod5vers4\n$mod5/$mod5vers5"

testerr_cmd_re "sh" "avail -t $mod5" "$ts_sh\$"
testerr_cmd_re "sh" "avail -t -d $mod5" "$ts_default_sh\$"
testerr_cmd_re "sh" "avail -t -L $mod5" "$ts_latest_sh\$"


#
#  tests on deep modules, mixing modulefiles, aliases and directories
#

set mod6 "modalias"
set mod6vers1 "1.0\\(@\\)"
set mod6vers2 "3.0"
set mod6vers3 "dir1/1.0"
set mod6vers4 "dir1/2.0\\(@\\)"
set mod6vers5 "dir2/2.0"
set mod6vers6 "dir2/3.0\\(@\\)"
set ts_sh "$header$mod6/$mod6vers1\n$mod6/$mod6vers2\n$mod6/$mod6vers3\n$mod6/$mod6vers4\n$mod6/$mod6vers5\n$mod6/$mod6vers6"
set ts_default_sh "$header$mod6/$mod6vers4\n$mod6/$mod6vers6"
set ts_latest_sh "$header$mod6/$mod6vers4\n$mod6/$mod6vers6"

testerr_cmd_re "sh" "avail -t $mod6" "$ts_sh\$"
testerr_cmd_re "sh" "avail -t -d $mod6" "$ts_default_sh\$"
testerr_cmd_re "sh" "avail -t -L $mod6" "$ts_latest_sh\$"


#
#  Cleanup
#

# restore environment
if { $verbose > 0 } {
    send_user "\tRestore MODULEPATH = $ORIG_MODULEPATH\n"
}
set env(MODULEPATH) "$ORIG_MODULEPATH"
unset ORIG_MODULEPATH

unset modpath
unset mod2
unset mod2vers1
unset mod2vers2
unset mod2vers3
unset mod2vers4
unset mod3
unset mod3vers1
unset mod3vers2
unset mod4
unset mod4vers1
unset mod4vers2
unset mod5
unset mod5vers1
unset mod5vers2
unset mod5vers3
unset mod5vers4
unset mod5vers5
unset mod6
unset mod6vers1
unset mod6vers2
unset mod6vers3
unset mod6vers4
unset mod6vers5
unset mod6vers6
unset ts_sh
unset ts_implicit_default_sh
unset ts_latest_sh
unset header
