# define module command and surrounding initial environment (default value
# for MODULESHOME, MODULEPATH, LOADEDMODULES and parse of init/.modulespath)
eval `@TCLSH@ @libexecdir@/modulecmd.tcl ruby autoinit`
@compatversion@
@compatversion@# redefine module command if compat version has been activated
@compatversion@if ENV['MODULES_USE_COMPAT_VERSION'] == '1' then
@compatversion@   class ENVModule
@compatversion@      def ENVModule.module(*args)
@compatversion@         if args[0].kind_of?(Array) then
@compatversion@            args = args[0].join(' ')
@compatversion@         else
@compatversion@            args = args.join(' ')
@compatversion@         end
@compatversion@         eval `@libexecdir@/modulecmd-compat ruby #{args}`
@compatversion@      end
@compatversion@   end
@compatversion@end
