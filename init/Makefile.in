.PHONY: install uninstall clean distclean

SH_LIKE  = sh ksh bash zsh profile.sh
CSH_LIKE = csh tcsh tcsh_completion profile.csh
OTHER    = perl python lisp tcl fish

# set default installation paths
prefix := @prefix@
bindir := @bindir@
libexecdir := @libexecdir@
initdir := @initdir@
modulefilesdir := @modulefilesdir@
datarootdir := @datarootdir@
mandir := @mandir@
# modulepaths and modulefiles to enable in default config
modulepath := @modulepath@
loadedmodules := @loadedmodules@
# path to C version installation
cverinitdir := @cverinitdir@
cverbindir := @cverbindir@
cvermandir := @cvermandir@
# enable or not some specific definition
setmanpath := @setmanpath@
setbinpath := @setbinpath@
setswitchml := @setswitchml@
setdotmodulespath := @setdotmodulespath@
usecverdotmodulespath := @usecverdotmodulespath@
# command location
TCLSH := @TCLSH@

# reset C version path if they are standard system path (to ensure
# switchml will not remove them from PATH or MANPATH)
ifneq ($(findstring $(cverbindir),/bin /usr/bin /usr/local/bin),)
  override cverbindir :=
endif
ifneq ($(findstring $(cvermandir),/usr/share/man /usr/local/share/man),)
  override cvermandir :=
endif

# kind of config file to use: modulerc or both .modulespath and modulerc
ifeq ($(setdotmodulespath),y)
  ALL_CONFIG := .modulespath modulerc
  # modulepath information will only be set in .modulespath
else
  ALL_CONFIG := modulerc
  # generate 'module use' commands to put in modulerc from modulepath
  modulerc := $(addprefix \nmodule use --append ,$(subst :, ,$(modulepath)))
endif

# generate 'module load' commands to put in modulerc from loadedmodules
ifneq ($(loadedmodules),)
  modulerc := $(modulerc)$(addprefix \nmodule load ,\
    $(subst :, ,$(loadedmodules)))
endif


ALL_SHELLS = $(SH_LIKE) $(CSH_LIKE) $(OTHER)

all: $(ALL_SHELLS) $(ALL_CONFIG)

# if enabled translate to keep text after markup elsewhere remove the
# entire line
ifeq ($(setmanpath),y)
  setmanpathre := \1\n
else
  setmanpathre :=
endif
ifeq ($(setbinpath),y)
  setbinpathre := \1\n
else
  setbinpathre :=
endif
ifeq ($(setswitchml),y)
  setswitchmlre := \1\n
else
  setswitchmlre :=
endif

define translate-in-script
perl -pe 's|\@prefix\@|$(prefix)|g; \
	s|\@libexecdir\@|$(libexecdir)|g; \
	s|\@initdir\@|$(initdir)|g; \
	s|\@modulefilesdir\@|$(modulefilesdir)|g; \
	s|\@bindir\@|$(bindir)|g; \
	s|\@mandir\@|$(mandir)|g; \
	s|\@setmanpath\@(.*)\n|$(setmanpathre)|g; \
	s|\@setbinpath\@(.*)\n|$(setbinpathre)|g; \
	s|\@setswitchml\@(.*)\n|$(setswitchmlre)|g; \
	s|\@cverinitdir\@|$(cverinitdir)|g; \
	s|\@cverbindir\@|$(cverbindir)|g; \
	s|\@cvermandir\@|$(cvermandir)|g; \
	s|\@modulerc\@|$(modulerc)|g; \
	s|\@modulepath\@|$(modulepath)|g; \
	s|\@SHELLNAME\@|$@|g; \
	s|\@TCLSH\@|$(TCLSH)|g' $< > $@
endef

%: %.in
	$(translate-in-script)

# tcsh is derivated from csh init script
tcsh: csh.in
	$(translate-in-script)

# this rule is needed for profile.sh to get matched
profile.sh: profile.sh.in
	$(translate-in-script)

# dumb rule to avoid Makefile being rebuilt by '%: %.in' rule
Makefile:

# make link on C version installed .modulespath
ifeq ($(usecverdotmodulespath),y)
.modulespath:
	ln -s $(cverinitdir)/$@ $@
endif

install: all
	mkdir -p $(initdir)
	mkdir -p $(initdir)/ksh-functions
	mkdir -p $(modulefilesdir)
	cp $(ALL_SHELLS) $(initdir)/
	cp bash_completion $(initdir)/
	cp ksh $(initdir)/ksh-functions/module
ifeq ($(setswitchml),y)
	cp ksh $(initdir)/ksh-functions/switchml
endif
	cp -P --remove-destination $(ALL_CONFIG) $(initdir)/

uninstall:
	rm -f $(addprefix $(initdir)/,$(ALL_SHELLS) bash_completion)
	rm -f $(initdir)/ksh-functions/module
ifeq ($(setswitchml),y)
	rm -f $(initdir)/ksh-functions/switchml
endif
	rm -f $(addprefix $(initdir)/,$(ALL_CONFIG))
	rmdir $(modulefilesdir)
	rmdir $(initdir)/ksh-functions
	rmdir $(initdir)

clean:
	rm -f $(ALL_SHELLS) modulerc .modulespath

distclean: clean
	rm -f Makefile
