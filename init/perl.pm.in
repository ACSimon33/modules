# define modules runtine quarantine configuration
@setquarvars@$ENV{'MODULES_RUN_QUARANTINE'} = '@RUN_QUARANTINE@';
@setquarvars@@$ENV{'RUNENV_VAR'} = 'RUNENV_VAL';@
@notsetquarvars@#$ENV{'MODULES_RUN_QUARANTINE'} = 'ENVVARNAME';
@notsetquarvars@
# setup quarantine if defined
my $_mlre = '';
if (defined $ENV{'MODULES_RUN_QUARANTINE'}) {
  foreach my $_mlv (split(' ', $ENV{'MODULES_RUN_QUARANTINE'})) {
     if ($_mlv =~ /^[A-Za-z_][A-Za-z0-9_]*$/) {
        if (defined $ENV{$_mlv}) {
           $_mlre .= "${_mlv}_modquar='$ENV{$_mlv}' ";
        }
        my $_mlrv = "MODULES_RUNENV_$_mlv";
        $_mlre .= "$_mlv='$ENV{$_mlrv}' ";
    }
  }
  if ($_mlre ne "") {
     $_mlre = "env $_mlre";
  }
}

eval `${_mlre}@TCLSH@ @libexecdir@/modulecmd.tcl perl autoinit`;

# clean temp variable used to setup quarantine
undef $_mlre;

@compatversion@# redefine module command if compat version has been activated
@compatversion@if ($ENV{'MODULES_USE_COMPAT_VERSION'} eq '1') {
@compatversion@   { no warnings 'redefine';
@compatversion@      *module = sub {
@compatversion@         eval `@libexecdir@/modulecmd-compat perl @_`;
@compatversion@         # return value as done on new main version
@compatversion@         return 1;
@compatversion@      };
@compatversion@   }
@compatversion@}
@compatversion@
1;
