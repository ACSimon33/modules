# only redirect module from stderr to stdout in interactive mode
# to avoid breaking non interactive session (scp, sftp, etc)
case "$-" in
   *i*)
      _moduleraw() { eval `@TCLSH@ @libexecdir@/modulecmd.tcl sh $*`; }
      module() { _moduleraw $* 2>&1 ; }
      # if sh is bash, export functions to get them defined in sub-shells
      if [ "${BASH:-}" != '' ]; then
         export -f _moduleraw
         export -f module
      fi
      ;;
   *)
      module() { eval `@TCLSH@ @libexecdir@/modulecmd.tcl sh $*`; }
      if [ "${BASH:-}" != '' ]; then
         export -f module
      fi
esac

# setup ENV variables to get module defined in sub-shells (works for 'sh'
# and 'ksh' in interactive mode and 'sh' (zsh-compat), 'bash' and 'ksh'
# (zsh-compat) in non-interactive mode.
ENV=@initdir@/profile.sh; export ENV
BASH_ENV=@initdir@/bash; export BASH_ENV

MODULESHOME=@prefix@; export MODULESHOME

@setbinpath@case ":$PATH:" in
@setbinpath@   *:@bindir@:*) ;;
@setbinpath@   *) PATH=@bindir@${PATH:+:}$PATH; export PATH
@setbinpath@esac
@setbinpath@
@setmanpath@manpath=`manpath 2>/dev/null`
@setmanpath@case ":$manpath:" in
@setmanpath@   *:@mandir@:*) ;;
@setmanpath@   *) MANPATH=@mandir@${manpath:+:}$manpath; export MANPATH
@setmanpath@esac
@setmanpath@
if [ "${MODULEPATH:-}" = '' ]; then
   if [ -r @initdir@/.modulespath ]; then
      MODULEPATH=`sed -n 's/[ 	#].*$//; /./H; $ { x; s/^\n//; s/\n/:/g; p; }' \
         @initdir@/.modulespath`; export MODULEPATH
   else
      MODULEPATH=; export MODULEPATH
   fi
fi

if [ "${LOADEDMODULES:-}" = '' ]; then
   LOADEDMODULES=; export LOADEDMODULES
fi

# load modulerc only if module environment is empty
if [ -r @initdir@/modulerc -a "$MODULEPATH" = '' -a "$LOADEDMODULES" = '' ]; then
   module source @initdir@/modulerc
fi
