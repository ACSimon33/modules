regular_task_template: &REGULAR_TASK_TEMPLATE
  env:
    RUNTESTFLAGS: -v
  # need to supersede Cirrus CI-specific git clone with a regular git client
  clone_script: |
    if [ "$CIRRUS_OS" = 'darwin' ]; then
      brew install git
    elif [ "$CIRRUS_OS" = 'freebsd' ]; then
      pkg install -y git
    elif [ -n "$(command -v zypper)" ]; then
      zypper install -y git
    elif [ -n "$(command -v apt-get)" ]; then
      apt-get update
      apt-get -y install git
    else
      yum install -y git
    fi
    if [ -z "$CIRRUS_PR" ]; then
      git clone --depth=320 --branch=$CIRRUS_BRANCH https://x-access-token:${CIRRUS_REPO_CLONE_TOKEN}@github.com/${CIRRUS_REPO_FULL_NAME}.git $CIRRUS_WORKING_DIR
    else
      git clone --depth=320 https://x-access-token:${CIRRUS_REPO_CLONE_TOKEN}@github.com/${CIRRUS_REPO_FULL_NAME}.git $CIRRUS_WORKING_DIR
    fi
    cd $CIRRUS_WORKING_DIR
    if [ -n "$CIRRUS_PR" ]; then
      git fetch origin pull/$CIRRUS_PR/head:pull/$CIRRUS_PR
    fi
    git reset --hard $CIRRUS_CHANGE_IN_REPO


task:
  << : *REGULAR_TASK_TEMPLATE
  freebsd_instance:
    matrix:
      image_family: freebsd-11-3-snap
      image_family: freebsd-12-1-snap
    cpu: 1
    memory: 2G
  install_script: pkg install -y bash wget gmake dejagnu py37-sphinx tcl86 tcl-wrapper autoconf automake gettext ksh93 zsh fish perl5 python37 ruby cmake R readline
  build_script: ./configure --enable-compat-version --without-tclx --with-tcl-ver=8.6 && gmake && gmake install
  test_script:
    - script/mt --base64-failed-log
    - script/mt --base64-failed-log install
  uninstall_script: gmake uninstall

task:
  << : *REGULAR_TASK_TEMPLATE
  env:
    COVERAGE: y
  osx_instance:
    image: catalina-xcode
  install_script: brew install md5sha1sum expect dejagnu grep fish
  build_script:
    # need to specify where to find tclConfig.sh on newer xcode release
    - ./configure --prefix=/tmp/modules --with-loadedmodules=null:dot --with-tcl=/Library/Developer/CommandLineTools/SDKs/MacOSX10.15.sdk/System/Library/Frameworks/Tcl.framework/Versions/8.5
    - make
    - make test-deps
    - make install
  test_script:
    - script/mt --base64-failed-log
    - script/mt --base64-failed-log install
    - script/nglfar2ccov modulecmd-test.tcl && bash <(curl -s https://codecov.io/bash)
  uninstall_script: make uninstall

task:
  << : *REGULAR_TASK_TEMPLATE
  # change dir to launch tests from path containing specific chars
  env:
    CIRRUS_WORKING_DIR: /tmp/modules-1.2.3+branch_name-91-g6dd3db49
    DEBIAN_FRONTEND: noninteractive
    LANGUAGE: C
    LANG: C
    LC_ALL: C
  container:
    image: ubuntu:bionic
    cpu: 1
    memory: 2G
  install_script: |
    apt-get update
    apt-get -y install wget expect-dev dejagnu python-sphinx bash tcsh ksh zsh fish tcl tcl8.6 perl python ruby cmake r-base-core
    # libtclenvmodules and compatibility version build requirements
    apt-get -y install gcc autoconf tcl8.6-dev
    # compatibility version-specific build requirements
    apt-get -y install automake autopoint
  build_script:
    - ./configure --with-tclsh=tclsh8.6 --prefix /tmp/modules --enable-compat-version --with-tcl=/usr/lib/tcl8.6 --with-tcl-ver=8.6 --without-tclx --enable-append-manpath --enable-append-binpath --with-bin-search-path=/usr/bin:/bin --disable-silent-shell-debug-support --enable-windows-support --with-loadedmodules=null:dot --with-quarantine-vars=LD_LIBRARY_PATH --enable-color --with-dark-background-colors='hi=1:se=2:er=91:wa=93:mp=1;94:di=94:al=96:sy=95' --enable-foo FOO=bar
    - make
    - make test-deps
    - make install
  # also enable a display on this test case to validate x-resource behavior
  test_script:
    - script/mt --base64-failed-log
    - script/mt --base64-failed-log install
  uninstall_script: make uninstall

task:
  << : *REGULAR_TASK_TEMPLATE
  container:
    matrix:
      image: centos:centos7
      image: centos:centos8
    cpu: 1
    memory: 2G
  install_script: |
    . /etc/os-release
    if [ $VERSION_ID -eq 8 ]; then
      sed -i 's|enabled=0|enabled=1|' /etc/yum.repos.d/CentOS-PowerTools.repo
    fi
    if [ $VERSION_ID -eq 8 ]; then
      PYTHON_PKG='python36'
      SPHINX_PKG='python3-sphinx'
      TCLXDEV_PKG=''
    else
      PYTHON_PKG='python'
      SPHINX_PKG='python-sphinx'
      TCLXDEV_PKG='tclx-devel'
    fi
    yum install -y epel-release
    yum install -y tcsh zsh ksh tcl perl $PYTHON_PKG ruby cmake R-core make wget perl $SPHINX_PKG git dejagnu man-db rpm-build bzip2 autoconf gcc tcl-devel
    yum install -y which xorg-x11-server-utils xorg-x11-server-Xvfb automake gettext-devel libX11-devel $TCLXDEV_PKG
    if [ $VERSION_ID -lt 8 ]; then
      wget -O /etc/yum.repos.d/shells_fish_release_2.repo http://download.opensuse.org/repositories/shells:fish:release:2/CentOS_${VERSION_ID}/shells:fish:release:2.repo
    fi
    yum install -y fish
  build_script:
    - ./configure --enable-compat-version --with-loadedmodules=null:dot --with-quarantine-vars='LD_LIBRARY_PATH LD_PRELOAD'
    - make
    - make test-deps
    - make install
  # also enable a display on this test case to validate x-resource behavior
  test_script:
    - xvfb-run script/mt --base64-failed-log
    - xvfb-run script/mt --base64-failed-log install
    - xvfb-run make srpm rpm
  uninstall_script: make uninstall

task:
  << : *REGULAR_TASK_TEMPLATE
  container:
    matrix:
      image: opensuse/leap
    cpu: 1
    memory: 2G
  install_script: |
    zypper install -y tcsh zsh ksh fish tcl perl python ruby cmake R-core R-core-packages make wget python-Sphinx git dejagnu man net-tools autoconf gcc tcl-devel
    zypper install -y which xrdb xvfb-run automake gettext-tools
  build_script:
    - ./configure --enable-compat-version --enable-versioning --with-loadedmodules=null:dot --with-quarantine-vars='LD_LIBRARY_PATH LD_PRELOAD'
    - make
    - make test-deps
    - make install
  # also enable a display on this test case to validate x-resource behavior
  test_script:
    - xvfb-run script/mt --base64-failed-log
    - xvfb-run script/mt --base64-failed-log install
  uninstall_script: make uninstall

# vim:set tabstop=2 shiftwidth=2 expandtab autoindent:
